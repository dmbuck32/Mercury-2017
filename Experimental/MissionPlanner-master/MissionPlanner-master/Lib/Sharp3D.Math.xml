<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sharp3D.Math</name>
    </assembly>
    <members>
        <member name="T:Sharp3D.Math.Analysis.DoubleUnaryFunction">
            <summary>
            Represents a function that takes a double-precision floating point parameter.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.DoubleUnaryFunction.#ctor(Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.DoubleUnaryFunction"/> class.
            </summary>
            <param name="f">
            A function delegate that takes a double value as a parameter and returns a double value.
            </param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.DoubleUnaryFunction.#ctor(Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction,Sharp3D.Math.Analysis.IDifferentiator,Sharp3D.Math.Analysis.IIntegrator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.DoubleUnaryFunction"/> class.
            </summary>
            <param name="f">A function delegate that takes a double value as a parameter and returns a double value.</param>
            <param name="d">The <see cref="T:Sharp3D.Math.Analysis.IDifferentiator"/> to use.</param>
            <param name="i">The <see cref="T:Sharp3D.Math.Analysis.IIntegrator"/> to use.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.DoubleUnaryFunction.Integrate(System.Double,System.Double)">
            <summary>
            Computes the integral of the current function over the specified interval. 
            </summary>
            <param name="a">Lower integration limit.</param>
            <param name="b">Upper integration limit.</param>
            <returns>The integral value over the specified interval.</returns>
            <remarks>
            If an integrator was not explicitly set, the method uses the default integrator.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Analysis.DoubleUnaryFunction.DefaultIntegrator">
            <summary>
            The default integrator used by the <see cref="T:Sharp3D.Math.Analysis.DoubleUnaryFunction"/> instances.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.DoubleUnaryFunction.DefaultDifferentiator">
            <summary>
            /// The default differentiator used by the <see cref="T:Sharp3D.Math.Analysis.DoubleUnaryFunction"/> instances.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.DoubleUnaryFunction.Function">
            <summary>
            Gets the function encapsulated by this object.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.DoubleUnaryFunction.Differentiator">
            <summary>
            Gets or sets the differentiator associated with this object.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.DoubleUnaryFunction.Integrator">
            <summary>
            Gets or sets the integrator associated with this object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Analysis.FloatUnaryFunction">
            <summary>
            Represents a function that takes a single-precision floating point parameter.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.FloatUnaryFunction.#ctor(Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.FloatUnaryFunction"/> class.
            </summary>
            <param name="f">
            A function delegate that takes a float value as a parameter and returns a float value.
            </param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.FloatUnaryFunction.#ctor(Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction,Sharp3D.Math.Analysis.IDifferentiator,Sharp3D.Math.Analysis.IIntegrator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.FloatUnaryFunction"/> class.
            </summary>
            <param name="f">A function delegate that takes a float value as a parameter and returns a float value.</param>
            <param name="d">The <see cref="T:Sharp3D.Math.Analysis.IDifferentiator"/> to use.</param>
            <param name="i">The <see cref="T:Sharp3D.Math.Analysis.IIntegrator"/> to use.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.FloatUnaryFunction.Integrate(System.Single,System.Single)">
            <summary>
            Computes the integral of the current function over the specified interval. 
            </summary>
            <param name="a">Lower integration limit.</param>
            <param name="b">Upper integration limit.</param>
            <returns>The integral value over the specified interval.</returns>
            <remarks>
            If an integrator was not explicitly set, the method uses the default integrator.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Analysis.FloatUnaryFunction.DefaultIntegrator">
            <summary>
            The default integrator used by the <see cref="T:Sharp3D.Math.Analysis.FloatUnaryFunction"/> instances.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.FloatUnaryFunction.DefaultDifferentiator">
            <summary>
            /// The default differentiator used by the <see cref="T:Sharp3D.Math.Analysis.FloatUnaryFunction"/> instances.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.FloatUnaryFunction.Function">
            <summary>
            Gets the function encapsulated by this object.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.FloatUnaryFunction.Differentiator">
            <summary>
            Gets or sets the differentiator associated with this object.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Analysis.FloatUnaryFunction.Integrator">
            <summary>
            Gets or sets the integrator associated with this object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Analysis.IDifferentiator">
            <summary>
            Defines an interface for classes that perform differentiation of a function at a point.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.IDifferentiator.Differentiate(Sharp3D.Math.Analysis.DoubleUnaryFunction,System.Double)">
            <summary>
            Differentiates the given function at a given point.
            </summary>
            <param name="f">The function to differentiate.</param>
            <param name="x">The point to differentiate at.</param>
            <returns>The derivative of function at <paramref name="x"/>.</returns>
        </member>
        <member name="T:Sharp3D.Math.Analysis.IIntegrator">
            <summary>
            Defines an interface for classes that perform integration of a function over an interval.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.IIntegrator.Integrate(Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction,System.Double,System.Double)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.IIntegrator.Integrate(Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction,System.Single,System.Single)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="T:Sharp3D.Math.Analysis.RombergIntegral">
            <summary>
            Approximates integrals of functions over a given interal using the Romberg integration method.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> class using default order value.
            </summary>
            <remarks>
            The new instance is created with the default order value 5.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> class.
            </summary>
            <param name="order">The order value to use.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.#ctor(Sharp3D.Math.Analysis.RombergIntegral)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> class using the order value from another instance.
            </summary>
            <param name="r">A <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.Integrate(Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction,System.Double,System.Double)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.Integrate(Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction,System.Single,System.Single)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.RombergIntegral.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Analysis.RombergIntegral"/> object this method creates.</returns>
        </member>
        <member name="P:Sharp3D.Math.Analysis.RombergIntegral.Order">
            <summary>
            Gets or sets the order of the Romberg approximation.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Analysis.SimpsonIntegral">
            <summary>
            Approximates integrals of functions over a given interal using the Simpson integration method.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> class.
            </summary>
            <param name="stepsNumber">The number of steps to use for the integration.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.#ctor(Sharp3D.Math.Analysis.SimpsonIntegral)">
            <summary>
            Initialize a new instance of the <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> class using values from another <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> instance.
            </summary>
            <param name="integrator">A <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.Integrate(Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction,System.Double,System.Double)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.Integrate(Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction,System.Single,System.Single)">
            <summary>
            Integrates a given function within the given integral.
            </summary>
            <param name="f">The function to integrate.</param>
            <param name="a">The lower limit.</param>
            <param name="b">The higher limit.</param>
            <returns>
            The integral of <paramref name="function"/> over the interval from <paramref name="a"/> to <paramref name="b"/>
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Analysis.SimpsonIntegral.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Analysis.SimpsonIntegral"/> object this method creates.</returns>
        </member>
        <member name="P:Sharp3D.Math.Analysis.SimpsonIntegral.StepsNumber">
            <summary>
            Gets a value indicating the number of steps used for the integration.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.ColorF">
            <summary>
            Represents an RGBA color.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class.
            </summary>
            <remarks>
            Default values are 1.0f for Alpha and 0.0f for the color channels.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class.
            </summary>
            <param name="red">Red channel value.</param>
            <param name="green">Green channel value.</param>
            <param name="blue">Blue channel value.</param>
            <remarks>The alpha channel value is set to 1.0f.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class.
            </summary>
            <param name="red">Red channel value.</param>
            <param name="green">Green channel value.</param>
            <param name="blue">Blue channel value.</param>
            <param name="alpha">Alpha channel value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor(Sharp3D.Math.Core.ColorF)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class using values from another instance.
            </summary>
            <param name="color">A <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor(Sharp3D.Math.Core.ColorF,Sharp3D.Math.Core.ColorF,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class from a blend of two colors.
            </summary>
            <param name="source">The blend source color.</param>
            <param name="dest">The blend destination color.</param>
            <param name="opacity">The opacity value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ColorF"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ColorF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ColorF"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ColorF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ColorF"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.ColorF"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.ColorF"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.ColorF"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.Clamp">
            <summary>
            Clamp the RGBA value to [0, 1] range.
            </summary>
            <remarks>
            Values above 1.0f are clamped to 1.0f.
            Values below 0.0f are clamped to 0.0f.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.ToHSV(System.Single@,System.Single@,System.Single@)">
            <summary>
            Calculates the color's HSV values.
            </summary>
            <param name="h">The Hue value.</param>
            <param name="s">The Saturation value.</param>
            <param name="v">The Value value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.ColorF"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Equality(Sharp3D.Math.Core.ColorF,Sharp3D.Math.Core.ColorF)">
            <summary>
            Tests whether two specified <see cref="T:Sharp3D.Math.Core.ColorF"/> instances are equal.
            </summary>
            <param name="u">The left-hand <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <param name="v">The right-hand <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns><see langword="true"/> if the two <see cref="T:Sharp3D.Math.Core.ColorF"/> instances are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Inequality(Sharp3D.Math.Core.ColorF,Sharp3D.Math.Core.ColorF)">
            <summary>
            Tests whether two specified <see cref="T:Sharp3D.Math.Core.ColorF"/> instances are not equal.
            </summary>
            <param name="u">The left-hand <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <param name="v">The right-hand <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns><see langword="true"/> if the two <see cref="T:Sharp3D.Math.Core.ColorF"/> instances are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Explicit(Sharp3D.Math.Core.ColorF)~Sharp3D.Math.Core.Vector3F">
            <summary>
            Converts the color to a <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.
            </summary>
            <param name="color">A <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Explicit(Sharp3D.Math.Core.ColorF)~Sharp3D.Math.Core.Vector4F">
            <summary>
            Converts the color to a <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.
            </summary>
            <param name="color">A <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Explicit(Sharp3D.Math.Core.ColorF)~System.Single[]">
            <summary>
            Converts the color structure to an array of single-precision floating point values.
            </summary>
            <param name="color">A <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ColorF.op_Explicit(Sharp3D.Math.Core.ColorF)~Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Converts the color structure to an array of single-precision floating point values.
            </summary>
            <param name="color">A <see cref="T:Sharp3D.Math.Core.ColorF"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.ColorF.Red">
            <summary>
            Gets or sets the red channel value.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.ColorF.Green">
            <summary>
            Gets or sets the green channel value.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.ColorF.Blue">
            <summary>
            Gets or sets the blue channel value.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.ColorF.Alpha">
            <summary>
            Gets or sets the alpha channel value.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.ColorF.Intensity">
            <summary>
            Gets the color's intensity.
            </summary>
            <remarks>
            Intensity = (R + G + B) / 3
            </remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexD">
            <summary>
            Represents a complex double-precision doubleing point number.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexD"/> class using given real and imaginary values.
            </summary>
            <param name="real">Real value.</param>
            <param name="imaginary">Imaginary value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.#ctor(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexD"/> class using values from a given complex instance.
            </summary>
            <param name="c">A complex number to get values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexD"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexD.Zero">
            <summary>
             A double-precision complex number that represents zero.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexD.One">
            <summary>
             A double-precision complex number that represents one.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexD.I">
            <summary>
             A double-precision complex number that represents the squere root of (-1).
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ComplexD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ComplexD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.ComplexD"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.ComplexD"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.ComplexD"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Add(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Adds two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Add(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Add(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Adds two complex numbers and put the result in the third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Add(Sharp3D.Math.Core.ComplexD,System.Double,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Adds a complex number and a scalar and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Subtracts a complex from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Subtracts a scalar from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Subtracts a complex from a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Subtracts a complex from a complex and put the result in the third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(Sharp3D.Math.Core.ComplexD,System.Double,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Subtracts a scalar from a complex and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Subtract(System.Double,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Subtracts a complex from a scalar and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Multiplies two complex numbers and put the result in a third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(Sharp3D.Math.Core.ComplexD,System.Double,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Multiplies a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Multiply(System.Double,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Multiplies a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Divides a complex by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Divides a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Divides a scalar by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Divides a complex by a complex and put the result in a third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(Sharp3D.Math.Core.ComplexD,System.Double,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Divides a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Divide(System.Double,Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD@)">
            <summary>
            Divides a scalar by a complex and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Negate(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Negates a complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.ApproxEqual(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Tests whether two complex numbers are approximately equal using default tolerance value.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.ApproxEqual(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Tests whether two complex numbers are approximately equal given a tolerance value.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.GetModulus">
            <summary>
            Gets the modulus of the complex number.
            </summary>
            <returns>
            The modulus of the complex number:  sqrt(real*real + imaginary*imaginary).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.GetModulusSquared">
            <summary>
            Gets the squared modulus of the complex number.
            </summary>
            <returns>
            The squared modulus of the complex number:  (real*real + imaginary*imaginary).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.GetConjugate">
            <summary>
            Gets the conjugate of the complex number.
            </summary>
            <returns>
            The conjugate of the complex number.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Normalize">
            <summary>
            Scale the complex number to modulus 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.ComplexD"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Equality(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Tests whether two specified complex numbers are equal.
            </summary>
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            <returns><see langword="true"/> if the two complex numbers are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Inequality(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Tests whether two specified complex numbers are not equal.
            </summary>
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            <returns><see langword="true"/> if the two complex numbers are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_UnaryNegation(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Negates the complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Addition(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Adds two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Addition(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Addition(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Subtraction(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Subtracts a complex from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Subtraction(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Subtracts a scalar from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Subtraction(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Subtracts a complex from a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Multiply(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Multiply(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Multiply(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Division(Sharp3D.Math.Core.ComplexD,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Divides a complex by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Division(Sharp3D.Math.Core.ComplexD,System.Double)">
            <summary>
            Divides a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Division(System.Double,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Divides a scalar by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Explicit(System.Single)~Sharp3D.Math.Core.ComplexD">
            <summary>
            Converts from a single-precision real number to a complex number. 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexD.op_Explicit(System.Double)~Sharp3D.Math.Core.ComplexD">
            <summary>
            Converts from a double-precision real number to a complex number. 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexD.Real">
            <summary>
            Gets or sets the real value of the complex number.
            </summary>
            <value>The real value of this complex number.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexD.Imaginary">
            <summary>
            Gets or sets the imaginary value of the complex number.
            </summary>
            <value>The imaginary value of this complex number.</value>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexDConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.ComplexD"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.ComplexDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexDCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </summary>
            <remarks>
            <b>IComplexDCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDCollection.CopyTo(Sharp3D.Math.Core.ComplexD[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IComplexDEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IComplexDEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IComplexDCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexDList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IComplexDList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.Add(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.ComplexD"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.Contains(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.ComplexD"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IComplexDList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.IndexOf(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> in the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.Insert(System.Int32,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.ComplexD"/> element into the
            <see cref="T:Sharp3D.Math.Core.IComplexDList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IComplexDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.Remove(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            from the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IComplexDList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IComplexDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IComplexDList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IComplexDList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.ComplexD"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.ComplexD"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IComplexDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IComplexDList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexDEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </summary>
            <remarks>
            <b>IComplexDEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexDEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexDEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.ComplexD"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.ComplexD"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IComplexDEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IComplexDEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexDArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </summary>
            <remarks><para>
            <b>ComplexDArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.#ctor(Sharp3D.Math.Core.ComplexDArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.#ctor(Sharp3D.Math.Core.ComplexD[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Add(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.ComplexD"/> to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.AddRange(Sharp3D.Math.Core.ComplexDArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.AddRange(Sharp3D.Math.Core.ComplexD[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.ComplexD"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.BinarySearch(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Contains(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.ComplexD"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.ComplexDArrayList.Clone"/> 
            because <see cref="T:Sharp3D.Math.Core.ComplexD"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>ComplexDArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>ComplexDArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.CopyTo(Sharp3D.Math.Core.ComplexD[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.CopyTo(Sharp3D.Math.Core.ComplexD[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.ComplexD"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IComplexDEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IComplexDEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.IndexOf(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Insert(System.Int32,Sharp3D.Math.Core.ComplexD)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.ComplexD"/> element into the
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.ReadOnly(Sharp3D.Math.Core.ComplexDArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Remove(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexD"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Synchronized(Sharp3D.Math.Core.ComplexDArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexD"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexDArrayList.Unique(Sharp3D.Math.Core.ComplexDArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>ComplexDArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> elements in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.ComplexDArrayList.Unique(Sharp3D.Math.Core.ComplexDArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.ComplexDArrayList.Unique(Sharp3D.Math.Core.ComplexDArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.ComplexD"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.ComplexD"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.ComplexD"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>ComplexDArrayList</b> already contains the
            specified element at a different index, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexD"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>ComplexDArrayList</b> already contains the
            specified element at a different index, and the <b>ComplexDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexDArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.ComplexDArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexF">
            <summary>
            Represents a complex single-precision floating point number.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexF"/> class using given real and imaginary values.
            </summary>
            <param name="real">Real value.</param>
            <param name="imaginary">Imaginary value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.#ctor(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexF"/> class using values from a given complex instance.
            </summary>
            <param name="c">A complex number to get values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexF"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexF.Zero">
            <summary>
             A single-precision complex number that represents zero.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexF.One">
            <summary>
             A single-precision complex number that represents one.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.ComplexF.I">
            <summary>
             A single-precision complex number that represents the squere root of (-1).
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ComplexF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.ComplexF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.ComplexF"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.ComplexF"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.ComplexF"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Add(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Adds two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Add(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Add(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Adds two complex numbers and put the result in the third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Add(Sharp3D.Math.Core.ComplexF,System.Single,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Adds a complex number and a scalar and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Subtracts a complex from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Subtracts a scalar from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Subtracts a complex from a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Subtracts a complex from a complex and put the result in the third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(Sharp3D.Math.Core.ComplexF,System.Single,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Subtracts a scalar from a complex and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Subtract(System.Single,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Subtracts a complex from a scalar and put the result into another complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Multiplies two complex numbers and put the result in a third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(Sharp3D.Math.Core.ComplexF,System.Single,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Multiplies a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Multiply(System.Single,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Multiplies a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Divides a complex by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Divides a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Divides a scalar by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Divides a complex by a complex and put the result in a third complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(Sharp3D.Math.Core.ComplexF,System.Single,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Divides a complex by a scalar and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Divide(System.Single,Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF@)">
            <summary>
            Divides a scalar by a complex and put the result into another complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Negate(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Negates a complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.ApproxEqual(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Tests whether two complex numbers are approximately equal using default tolerance value.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.ApproxEqual(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Tests whether two complex numbers are approximately equal given a tolerance value.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.GetModulus">
            <summary>
            Gets the modulus of the complex number.
            </summary>
            <returns>
            The modulus of the complex number:  sqrt(real*real + imaginary*imaginary).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.GetModulusSquared">
            <summary>
            Gets the squared modulus of the complex number.
            </summary>
            <returns>
            The squared modulus of the complex number:  (real*real + imaginary*imaginary).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.GetConjugate">
            <summary>
            Gets the conjugate of the complex number.
            </summary>
            <returns>
            The conjugate of the complex number.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Normalize">
            <summary>
            Scale the complex number to modulus 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.ComplexF"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Equality(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Tests whether two specified complex numbers are equal.
            </summary>
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            <returns><see langword="true"/> if the two complex numbers are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Inequality(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Tests whether two specified complex numbers are not equal.
            </summary>
            <param name="u">The left-hand complex number.</param>
            <param name="v">The right-hand complex number.</param>
            <returns><see langword="true"/> if the two complex numbers are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_UnaryNegation(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Negates the complex number.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Addition(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Adds two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Addition(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Addition(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Adds a complex number and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Subtraction(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Subtracts a complex from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Subtraction(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Subtracts a scalar from a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Subtraction(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Subtracts a complex from a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Multiply(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Multiplies two complex numbers.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Multiply(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Multiply(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Multiplies a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Division(Sharp3D.Math.Core.ComplexF,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Divides a complex by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Division(Sharp3D.Math.Core.ComplexF,System.Single)">
            <summary>
            Divides a complex by a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Division(System.Single,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Divides a scalar by a complex.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Explicit(System.Double)~Sharp3D.Math.Core.ComplexF">
            <summary>
            Converts from a double-precision real number to a complex number. 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexF.op_Explicit(System.Single)~Sharp3D.Math.Core.ComplexF">
            <summary>
            Converts from a single-precision real number to a complex number. 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexF.Real">
            <summary>
            Gets or sets the real value of the complex number.
            </summary>
            <value>The real value of this complex number.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexF.Imaginary">
            <summary>
            Gets or sets the imaginary value of the complex number.
            </summary>
            <value>The imaginary value of this complex number.</value>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexFConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.ComplexF"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.ComplexFConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexFCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </summary>
            <remarks>
            <b>IComplexFCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFCollection.CopyTo(Sharp3D.Math.Core.ComplexF[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IComplexFEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IComplexFEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IComplexFCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexFList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IComplexFList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.Add(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.ComplexF"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.Contains(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.ComplexF"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IComplexFList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.IndexOf(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> in the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.Insert(System.Int32,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.ComplexF"/> element into the
            <see cref="T:Sharp3D.Math.Core.IComplexFList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IComplexFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.Remove(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            from the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IComplexFList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IComplexFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IComplexFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IComplexFList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IComplexFList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.ComplexF"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.ComplexF"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IComplexFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IComplexFList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IComplexFEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </summary>
            <remarks>
            <b>IComplexFEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IComplexFEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IComplexFEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.ComplexF"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.ComplexF"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IComplexFEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IComplexFEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.ComplexFArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </summary>
            <remarks><para>
            <b>ComplexFArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.#ctor(Sharp3D.Math.Core.ComplexFArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.#ctor(Sharp3D.Math.Core.ComplexF[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Add(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.ComplexF"/> to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.AddRange(Sharp3D.Math.Core.ComplexFArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.AddRange(Sharp3D.Math.Core.ComplexF[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.ComplexF"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.BinarySearch(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Contains(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.ComplexF"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.ComplexFArrayList.Clone"/> 
            because <see cref="T:Sharp3D.Math.Core.ComplexF"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>ComplexFArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>ComplexFArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.CopyTo(Sharp3D.Math.Core.ComplexF[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.CopyTo(Sharp3D.Math.Core.ComplexF[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.ComplexF"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IComplexFEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IComplexFEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.IndexOf(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Insert(System.Int32,Sharp3D.Math.Core.ComplexF)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.ComplexF"/> element into the
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.ReadOnly(Sharp3D.Math.Core.ComplexFArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Remove(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.ComplexF"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Synchronized(Sharp3D.Math.Core.ComplexFArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.ComplexF"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ComplexFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.ComplexFArrayList.Unique(Sharp3D.Math.Core.ComplexFArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>ComplexFArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> elements in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.ComplexFArrayList.Unique(Sharp3D.Math.Core.ComplexFArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.ComplexFArrayList.Unique(Sharp3D.Math.Core.ComplexFArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.ComplexF"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.ComplexF"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.ComplexF"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>ComplexFArrayList</b> already contains the
            specified element at a different index, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.ComplexFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.ComplexF"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>ComplexFArrayList</b> already contains the
            specified element at a different index, and the <b>ComplexFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.ComplexFArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.ComplexFArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IDoubleCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:System.Double"/> elements.
            </summary>
            <remarks>
            <b>IDoubleCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:System.Double"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleCollection.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Double"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Double"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IDoubleEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IDoubleEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IDoubleCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IDoubleList">
            <summary>
            Represents a strongly typed collection of <see cref="T:System.Double"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IDoubleList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:System.Double"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.Add(System.Double)">
            <summary>
            Adds a <see cref="T:System.Double"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDoubleList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDoubleList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.Contains(System.Double)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>
            contains the specified <see cref="T:System.Double"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IDoubleList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.IndexOf(System.Double)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Double"/> in the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.Insert(System.Int32,System.Double)">
            <summary>
            Inserts a <see cref="T:System.Double"/> element into the
            <see cref="T:Sharp3D.Math.Core.IDoubleList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Double"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IDoubleCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDoubleList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.Remove(System.Double)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Double"/>
            from the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDoubleList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IDoubleList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IDoubleCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDoubleList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IDoubleList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IDoubleList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Double"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Double"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IDoubleCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IDoubleList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IDoubleEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:System.Double"/> elements.
            </summary>
            <remarks>
            <b>IDoubleEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:System.Double"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IDoubleEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IDoubleEnumerator.Current">
            <summary>
            Gets the current <see cref="T:System.Double"/> element in the collection.
            </summary>
            <value>The current <see cref="T:System.Double"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IDoubleEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IDoubleEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.DoubleArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:System.Double"/> elements.
            </summary>
            <remarks><para>
            <b>DoubleArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:System.Double"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> class
            that contains elements copied from the specified <see cref="T:System.Double"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Double"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Add(System.Double)">
            <summary>
            Adds a <see cref="T:System.Double"/> to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            This argument must be compatible with <see cref="T:System.Double"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Double"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.AddRange(Sharp3D.Math.Core.DoubleArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.AddRange(System.Double[])">
            <summary>
            Adds the elements of a <see cref="T:System.Double"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Double"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.BinarySearch(System.Double)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> for an
            <see cref="T:System.Double"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Contains(System.Double)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            contains the specified <see cref="T:System.Double"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            This argument must be compatible with <see cref="T:System.Double"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Double"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.DoubleArrayList.Clone"/> 
            because <see cref="T:System.Double"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>DoubleArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>DoubleArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.CopyTo(System.Double[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Double"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Double"/> elements copied from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Double"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Double"/> elements copied from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Double"/> elements copied from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:System.Double"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IDoubleEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IDoubleEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.IndexOf(System.Double)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Double"/> in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            This argument must be compatible with <see cref="T:System.Double"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Double"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Insert(System.Int32,System.Double)">
            <summary>
            Inserts a <see cref="T:System.Double"/> element into the
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:System.Double"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            This argument must be compatible with <see cref="T:System.Double"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Double"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.ReadOnly(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Remove(System.Double)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Double"/>
            from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            This argument must be compatible with <see cref="T:System.Double"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Double"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Synchronized(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:System.Double"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:System.Double"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DoubleArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.DoubleArrayList.Unique(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>DoubleArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:System.Double"/> elements in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.DoubleArrayList.Unique(Sharp3D.Math.Core.DoubleArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.DoubleArrayList.Unique(Sharp3D.Math.Core.DoubleArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Double"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Double"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>DoubleArrayList</b> already contains the
            specified element at a different index, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:System.Double"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.DoubleArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:System.Double"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>DoubleArrayList</b> already contains the
            specified element at a different index, and the <b>DoubleArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.DoubleArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IFloatCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:System.Single"/> elements.
            </summary>
            <remarks>
            <b>IFloatCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:System.Single"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatCollection.CopyTo(System.Single[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IFloatCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Single"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Single"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IFloatCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IFloatEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IFloatEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IFloatCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IFloatCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IFloatCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IFloatList">
            <summary>
            Represents a strongly typed collection of <see cref="T:System.Single"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IFloatList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:System.Single"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:System.Single"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IFloatList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IFloatList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.Contains(System.Single)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IFloatList"/>
            contains the specified <see cref="T:System.Single"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IFloatList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.IndexOf(System.Single)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Single"/> in the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IFloatList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.Insert(System.Int32,System.Single)">
            <summary>
            Inserts a <see cref="T:System.Single"/> element into the
            <see cref="T:Sharp3D.Math.Core.IFloatList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Single"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IFloatCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IFloatList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.Remove(System.Single)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Single"/>
            from the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IFloatList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IFloatList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IFloatCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IFloatList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IFloatList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IFloatList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Single"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Single"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Single"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IFloatCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IFloatList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IFloatEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:System.Single"/> elements.
            </summary>
            <remarks>
            <b>IFloatEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:System.Single"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IFloatEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IFloatEnumerator.Current">
            <summary>
            Gets the current <see cref="T:System.Single"/> element in the collection.
            </summary>
            <value>The current <see cref="T:System.Single"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IFloatEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IFloatEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:System.Single"/> elements.
            </summary>
            <remarks><para>
            <b>FloatArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:System.Single"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> class
            that contains elements copied from the specified <see cref="T:System.Single"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Single"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:System.Single"/> to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            This argument must be compatible with <see cref="T:System.Single"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Single"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.AddRange(Sharp3D.Math.Core.FloatArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.AddRange(System.Single[])">
            <summary>
            Adds the elements of a <see cref="T:System.Single"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Single"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.BinarySearch(System.Single)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> for an
            <see cref="T:System.Single"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Contains(System.Single)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            contains the specified <see cref="T:System.Single"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            This argument must be compatible with <see cref="T:System.Single"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Single"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.FloatArrayList.Clone"/> 
            because <see cref="T:System.Single"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>FloatArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>FloatArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.CopyTo(System.Single[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Single"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Single"/> elements copied from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.CopyTo(System.Single[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Single"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Single"/> elements copied from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Single"/> elements copied from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:System.Single"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IFloatEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IFloatEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.IndexOf(System.Single)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Single"/> in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            This argument must be compatible with <see cref="T:System.Single"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Single"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Insert(System.Int32,System.Single)">
            <summary>
            Inserts a <see cref="T:System.Single"/> element into the
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:System.Single"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            This argument must be compatible with <see cref="T:System.Single"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Single"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.ReadOnly(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Remove(System.Single)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Single"/>
            from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            This argument must be compatible with <see cref="T:System.Single"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Single"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Synchronized(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:System.Single"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:System.Single"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>FloatArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.FloatArrayList.Unique(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>FloatArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:System.Single"/> elements in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.FloatArrayList.Unique(Sharp3D.Math.Core.FloatArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.FloatArrayList.Unique(Sharp3D.Math.Core.FloatArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Single"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Single"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Single"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>FloatArrayList</b> already contains the
            specified element at a different index, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:System.Single"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.FloatArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:System.Single"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>FloatArrayList</b> already contains the
            specified element at a different index, and the <b>FloatArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.FloatArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.FloatArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IIntCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:System.Int32"/> elements.
            </summary>
            <remarks>
            <b>IIntCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:System.Int32"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntCollection.CopyTo(System.Int32[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IIntCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Int32"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Int32"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IIntCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IIntEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IIntEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IIntCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IIntCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IIntCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IIntList">
            <summary>
            Represents a strongly typed collection of <see cref="T:System.Int32"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IIntList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:System.Int32"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.Add(System.Int32)">
            <summary>
            Adds a <see cref="T:System.Int32"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IIntList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIntList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIntList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.Contains(System.Int32)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IIntList"/>
            contains the specified <see cref="T:System.Int32"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IIntList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.IndexOf(System.Int32)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Int32"/> in the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IIntList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a <see cref="T:System.Int32"/> element into the
            <see cref="T:Sharp3D.Math.Core.IIntList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Int32"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IIntCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIntList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.Remove(System.Int32)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Int32"/>
            from the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIntList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IIntList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IIntCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIntList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IIntList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IIntList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Int32"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Int32"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IIntCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IIntList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IIntEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:System.Int32"/> elements.
            </summary>
            <remarks>
            <b>IIntEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:System.Int32"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IIntEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IIntEnumerator.Current">
            <summary>
            Gets the current <see cref="T:System.Int32"/> element in the collection.
            </summary>
            <value>The current <see cref="T:System.Int32"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IIntEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IIntEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IntArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:System.Int32"/> elements.
            </summary>
            <remarks><para>
            <b>IntArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:System.Int32"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.#ctor(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> class
            that contains elements copied from the specified <see cref="T:System.Int32"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Int32"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Add(System.Int32)">
            <summary>
            Adds a <see cref="T:System.Int32"/> to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            This argument must be compatible with <see cref="T:System.Int32"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Int32"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.AddRange(Sharp3D.Math.Core.IntArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.AddRange(System.Int32[])">
            <summary>
            Adds the elements of a <see cref="T:System.Int32"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:System.Int32"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.BinarySearch(System.Int32)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.IntArrayList"/> for an
            <see cref="T:System.Int32"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Contains(System.Int32)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            contains the specified <see cref="T:System.Int32"/> element.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            This argument must be compatible with <see cref="T:System.Int32"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Int32"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.IntArrayList.Clone"/> 
            because <see cref="T:System.Int32"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>IntArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>IntArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.CopyTo(System.Int32[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Int32"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Int32"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.CopyTo(System.Int32[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:System.Int32"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Int32"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:System.Int32"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:System.Int32"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IIntEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IIntEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.IndexOf(System.Int32)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Int32"/> in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            This argument must be compatible with <see cref="T:System.Int32"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Int32"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a <see cref="T:System.Int32"/> element into the
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:System.Int32"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            This argument must be compatible with <see cref="T:System.Int32"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Int32"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.ReadOnly(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Remove(System.Int32)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Int32"/>
            from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            This argument must be compatible with <see cref="T:System.Int32"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:System.Int32"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Synchronized(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:System.Int32"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:System.Int32"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IntArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IntArrayList.Unique(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.IntArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>IntArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:System.Int32"/> elements in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.IntArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.IntArrayList.Unique(Sharp3D.Math.Core.IntArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.IntArrayList.Unique(Sharp3D.Math.Core.IntArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:System.Int32"/> element to get or set.</param>
            <value>
            The <see cref="T:System.Int32"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>IntArrayList</b> already contains the
            specified element at a different index, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:System.Int32"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.IntArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:System.Int32"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.IntArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>IntArrayList</b> already contains the
            specified element at a different index, and the <b>IntArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IntArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.IntArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Interval">
            <summary>
            Represents a numeric interval with inclusive or exclusive lower and upper bounds.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Interval"/> class.
            </summary>
            <remarks>
            Constructs an open interval (0, 1).
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.#ctor(Sharp3D.Math.Core.Interval.Type,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Interval"/> class.
            </summary>
            <param name="type">The interval type.</param>
            <param name="minValue">The left endpoint for the interval.</param>
            <param name="maxValue">The right endpoint for the interval.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.#ctor(Sharp3D.Math.Core.Interval)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Interval"/> class using a given <see cref="T:Sharp3D.Math.Core.Interval"/> instance.
            </summary>
            <param name="interval">An <see cref="T:Sharp3D.Math.Core.Interval"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Interval"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Interval"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Interval"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Interval"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.IsInside(System.Double)">
            <summary>
            checks if a value is inside the interval.
            </summary>
            <param name="value">A scalar value.</param>
            <returns><see langword="true"/> if the value is inside the interval; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.op_Equality(Sharp3D.Math.Core.Interval,Sharp3D.Math.Core.Interval)">
            <summary>
            Tests whether two specified intervals are equal.
            </summary>
            <param name="a">The left-hand interval.</param>
            <param name="b">The right-hand interval.</param>
            <returns><see langword="true"/> if the two intervals are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Interval.op_Inequality(Sharp3D.Math.Core.Interval,Sharp3D.Math.Core.Interval)">
            <summary>
            Tests whether two specified intervals are not equal.
            </summary>
            <param name="a">The left-hand interval.</param>
            <param name="b">The right-hand interval.</param>
            <returns><see langword="true"/> if the two intervals are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Interval.IntervalType">
            <summary>
            Gets or sets the interval type.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Interval.Min">
            <summary>
            Gets or sets the left endpoint for the interval.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Interval.Max">
            <summary>
            Gets or sets the right endpoint for the interval.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Interval.Type">
            <summary>
            An enumeration representing the possible interval types classified according to whether or not the endpoints are included in the interval. 
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Interval.Type.Open">
            <summary>
            Both endpoints are not included.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Interval.Type.Closed">
            <summary>
            Both endpoints are included.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Interval.Type.OpenClosed">
            <summary>
            Left endpoint not included. Right endpoint included.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Interval.Type.ClosedOpen">
            <summary>
            Left endpoint included. Right endpoint not included.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions">
            <summary>
            Provides standard mathematical functions for the library types.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.PI">
            <summary>
            The value of PI.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.TwoPI">
            <summary>
            The value of (2 * PI).
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.SquaredPI">
            <summary>
            The value of (PI*PI).
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.HalfPI">
            <summary>
            The value of PI/2.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.EpsilonF">
            <summary>
            Epsilon, a fairly small value for a single precision floating point
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.EpsilonD">
            <summary>
            Epsilon, a fairly small value for a double precision floating point
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.FloatAbsFunction">
            <summary>
            Absolute value function for single-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.DoubleAbsFunction">
            <summary>
            Absolute value function for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.IntAbsFunction">
            <summary>
            Absolute value function for integers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.FloatSqrtFunction">
            <summary>
            Square root function for single-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.DoubleSqrtFunction">
            <summary>
            Square root function for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.IntSqrtFunction">
            <summary>
            Square root function for integers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.DoubleLinearInterpolationFunction">
            <summary>
            Linear interpolation function  for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.FloatLinearInterpolationFunction">
            <summary>
            Linear interpolation function  for single-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.DoubleCosineInterpolationFunction">
            <summary>
            Cosine interpolation function  for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.FloatCosineInterpolationFunction">
            <summary>
            Cosine interpolation function  for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.DoubleCubicInterpolationFunction">
            <summary>
            Cubic interpolation function  for double-precision floating point numbers.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.FloatCubicInterpolationFunction">
            <summary>
            Cubic interpolation function  for double-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Int32)">
            <summary>
            Calculates the absolute value of an integer.
            </summary>
            <param name="x">An integer.</param>
            <returns>The absolute value of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Single)">
            <summary>
            Calculates the absolute value of a single-precision floating point number.
            </summary>
            <param name="x">A single-precision floating point number.</param>
            <returns>The absolute value of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Double)">
            <summary>
            Calculates the absolute value of a double-precision floating point number.
            </summary>
            <param name="x">A double-precision floating point number.</param>
            <returns>The absolute value of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.IntArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given integers array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.IntArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given floats array.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given doubles array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Int32[])">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.IntArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given integers array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.IntArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Single[])">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given floats array.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.FloatArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Abs(System.Double[])">
            <summary>
            Creates a new <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> whose element values are the
            result of applying the absolute function on the elements of the
            given doubles array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.DoubleArrayList"/> whose values are the result of applying the absolute function to each element in <paramref name="array"/></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(System.Int32[])">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(System.Single[])">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(System.Double[])">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.AbsSum(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the sum of the absolute value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The sum of the absolute values of the elements in <paramref name="array"/>.</returns>
            <remarks>sum = abs(array[0]) + abs(array[1])...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(System.Int32[])">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(System.Single[])">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(System.Double[])">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sum(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the sum of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The sum of the array's elements.</returns>
            <remarks>sum = array[0] + array[1]...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(System.Int32[])">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(System.Single[])">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(System.Double[])">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.SumOfSquares(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the sum of a given array's elements square values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The sum of the array's elements square value.</returns>
            <remarks>sum = array[0]^2 + array[1]^2 ...</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sqrt(System.Double)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="value">A double-precision floating point number.</param>
            <returns>The square root of a specified number.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sqrt(System.Single)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="value">A single-precision floating point number.</param>
            <returns>The square root of a specified number.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sqrt(System.Int32)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="value">An integer.</param>
            <returns>The square root of a specified number.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sqrt(Sharp3D.Math.Core.ComplexD)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="value">A <see cref="T:Sharp3D.Math.Core.ComplexD"/> instance.</param>
            <returns>The square root of a specified number.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sqrt(Sharp3D.Math.Core.ComplexF)">
            <summary>
            Returns the square root of a specified number.
            </summary>
            <param name="value">A <see cref="T:Sharp3D.Math.Core.ComplexF"/> instance.</param>
            <returns>The square root of a specified number.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Log(System.Double)">
            <summary>
            Calculates the natural (base e) logarithm of a specified number.
            </summary>
            <param name="value">A double-precision real number whose logarithm is to be found.</param>
            <returns>The natural logarithm of <paramref name="value"/>; that is, ln(value).</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Log(System.Single)">
            <summary>
            Calculates the natural (base e) logarithm of a specified number.
            </summary>
            <param name="value">A single-precision real number whose logarithm is to be found.</param>
            <returns>The natural logarithm of <paramref name="value"/>; that is, ln(value).</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Exp(System.Double)">
            <summary>
            Returns <b>e</b> raised to the specified power.
            </summary>
            <param name="value">A double-precision real number specifying the power.</param>
            <returns>The number e raised to the power <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Exp(System.Single)">
            <summary>
            Returns <b>e</b> raised to the specified power.
            </summary>
            <param name="value">A single-precision real number specifying the power.</param>
            <returns>The number e raised to the power <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sin(System.Single)">
            <summary>
            Returns the sine of the specified angle.
            </summary>
            <param name="value">A double-precision real number representing the angle, measured in radians.</param>
            <returns>
            The sine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Sin(System.Double)">
            <summary>
            Returns the sine of the specified angle.
            </summary>
            <param name="value">A single-precision real number representing the angle, measured in radians.</param>
            <returns>
            The sine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Cos(System.Single)">
            <summary>
            Returns the cosine of the specified angle.
            </summary>
            <param name="value">A single-precision real number representing the angle, measured in radians.</param>
            <returns>
            The cosine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Cos(System.Double)">
            <summary>
            Returns the cosine of the specified angle.
            </summary>
            <param name="value">A double-precision real number representing the angle, measured in radians.</param>
            <returns>
            The cosine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Tan(System.Single)">
            <summary>
            Returns the tangent of the specified angle.
            </summary>
            <param name="value">A single-precision real number representing the angle, measured in radians.</param>
            <returns>
            The cosine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Tan(System.Double)">
            <summary>
            Returns the tangent of the specified angle.
            </summary>
            <param name="value">A double-precision real number representing the angle, measured in radians.</param>
            <returns>
            The cosine of <paramref name="value"/>. 
            If <paramref name="value"/> is equal to NaN, NegativeInfinity, or PositiveInfinity, this method returns NaN.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamp a <paramref name="value"/> to <paramref name="destValue"/> if it is withon the <paramref name="tolerance"/> range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="destValue">The clamped value.</param>
            <param name="tolerance">The tolerance value.</param>
            <returns>
            Returns the clamped value.
            result = (tolerance > Abs(value-destValue)) ? destValue : value;
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Clamp(System.Double,System.Double)">
            <summary>
            Clamp a <paramref name="value"/> to <paramref name="destValue"/> using the default tolerance value.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="destValue">The clamped value.</param>
            <returns>
            Returns the clamped value.
            result = (EpsilonD &gt; Abs(value-destValue)) ? destValue : value;
            </returns>
            <remarks><see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonD"/> is used for tolerance.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clamp a <paramref name="value"/> to <paramref name="destValue"/> if it is withon the <paramref name="tolerance"/> range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="destValue">The clamped value.</param>
            <param name="tolerance">The tolerance value.</param>
            <returns>
            Returns the clamped value.
            result = (tolerance > Abs(value-destValue)) ? destValue : value;
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Clamp(System.Single,System.Single)">
            <summary>
            Clamp a <paramref name="value"/> to <paramref name="destValue"/> using the default tolerance value.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="destValue">The clamped value.</param>
            <returns>
            Returns the clamped value.
            result = (EpsilonF &gt; Abs(value-destValue)) ? destValue : value;
            </returns>
            <remarks><see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonF"/> is used for tolerance.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(System.Int32[])">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(System.Single[])">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(System.Double[])">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinValue(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Calculates the minimum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(System.Int32[])">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(System.Single[])">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(System.Double[])">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxValue(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Calculates the maximum value of a given vector's elements.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(System.Int32[])">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(System.Single[])">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(System.Double[])">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MinAbsValue(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the minimum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The minimum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(System.Int32[])">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(System.Single[])">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(System.Double[])">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.MaxAbsValue(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the maximum value of a given array's elements absolute values.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The maximum value.</returns>
            <exception cref="T:System.ArgumentException">The if the given array's length is zero.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(System.Int32[])">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(System.Single[])">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of single-precision floating point values.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(System.Double[])">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Mean(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the mean of a given array's elements.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The mean of the elements in <paramref name="array"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(System.Int32[])">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(System.Single[])">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(System.Double[])">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Variance(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the variance of the given array.
            </summary>
            <param name="array">An array of double-precision floating point values.</param>
            <returns>The variance of the array elements.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(System.Int32[])">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(System.Single[])">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(System.Double[])">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountPositives(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the number of positive values in the given array.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(System.Int32[])">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of integers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(System.Single[])">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(System.Double[])">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CountNegatives(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Calculates the number of negative values in the given array.
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
            <returns>The number of positive values in the array</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.GetSign(System.Int32)">
            <summary>
            Returns a value indicating the sign of a given integer.
            </summary>
            <param name="value">A signed number.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.GetSign(System.Single)">
            <summary>
            Returns a value indicating the sign of a given float.
            </summary>
            <param name="value">A single precision floating point number.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.GetSign(System.Double)">
            <summary>
            Returns a value indicating the sign of a given double.
            </summary>
            <param name="value">A double precision floating point number.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.GetSign(System.Single,System.Single)">
            <summary>
            Returns a value indicating the sign of a given integer.
            </summary>
            <param name="value">A single precision floating point number.</param>
            <param name="tolerance">The tolerance value to use.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/> value.</returns>
            <remarks>
            If the value if larger than the tolerance value, the result is positive.
            If the value if smaller than the negative tolerance value (-tolerance), the result is negative.
            if value if in the [-tolerance, tolerance] range the result is zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.GetSign(System.Double,System.Double)">
            <summary>
            Returns a value indicating the sign of a given integer.
            </summary>
            <param name="value">A double precision floating point number.</param>
            <param name="tolerance">The tolerance value to use.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/> value.</returns>
            <remarks>
            If the value if larger than the tolerance value, the result is positive.
            If the value if smaller than the negative tolerance value (-tolerance), the result is negative.
            if value if in the [-tolerance, tolerance] range the result is zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.ApproxEquals(System.Single,System.Single)">
            <summary>
            Tests whether two single-precision floating point numbers are approximately equal using default tolerance value.
            </summary>
            <param name="a">A single-precision floating point number.</param>
            <param name="b">A single-precision floating point number.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.ApproxEquals(System.Single,System.Single,System.Single)">
            <summary>
            Tests whether two single-precision floating point numbers are approximately equal given a tolerance value.
            </summary>
            <param name="a">A single-precision floating point number.</param>
            <param name="b">A single-precision floating point number.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.ApproxEquals(System.Double,System.Double)">
            <summary>
            Tests whether two double-precision floating point numbers are approximately equal using default tolerance value.
            </summary>
            <param name="a">A double-precision floating point number.</param>
            <param name="b">A double-precision floating point number.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.ApproxEquals(System.Double,System.Double,System.Double)">
            <summary>
            Tests whether two double-precision floating point numbers are approximately equal given a tolerance value.
            </summary>
            <param name="a">A double-precision floating point number.</param>
            <param name="b">A double-precision floating point number.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Double@,System.Double@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A double-precision floating point number.</param>
            <param name="b">A double-precision floating point number.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Single@,System.Single@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A single-precision floating point number.</param>
            <param name="b">A single-precision floating point number.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Decimal@,System.Decimal@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Decimal"/> value.</param>
            <param name="b">A <see cref="T:System.Decimal"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.SByte@,System.SByte@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.SByte"/> value.</param>
            <param name="b">A <see cref="T:System.SByte"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Byte@,System.Byte@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Byte"/> value.</param>
            <param name="b">A <see cref="T:System.Byte"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Char@,System.Char@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Char"/> value.</param>
            <param name="b">A <see cref="T:System.Char"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Int16@,System.Int16@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Int16"/> value.</param>
            <param name="b">A <see cref="T:System.Int16"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.UInt16@,System.UInt16@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.UInt16"/> value.</param>
            <param name="b">A <see cref="T:System.UInt16"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Int32@,System.Int32@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Int32"/> value.</param>
            <param name="b">A <see cref="T:System.Int32"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.UInt32@,System.UInt32@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.UInt32"/> value.</param>
            <param name="b">A <see cref="T:System.UInt32"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.Int64@,System.Int64@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.Int64"/> value.</param>
            <param name="b">A <see cref="T:System.Int64"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.Swap(System.UInt64@,System.UInt64@)">
            <summary>
            Swaps two values.
            </summary>
            <param name="a">A <see cref="T:System.UInt64"/> value.</param>
            <param name="b">A <see cref="T:System.UInt64"/> value.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.LinearInterpolation(System.Double,System.Double,System.Double)">
            <summary>
            Interpolate two values using linear interpolation.
            </summary>
            <param name="a">A double-precision floating point number representing the first point.</param>
            <param name="b">A double-precision floating point number representing the second point.</param>
            <param name="x">A double-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.LinearInterpolation(System.Single,System.Single,System.Single)">
            <summary>
            Interpolate two values using linear interpolation.
            </summary>
            <param name="a">A single-precision floating point number representing the first point.</param>
            <param name="b">A single-precision floating point number representing the second point.</param>
            <param name="x">A single-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CosineInterpolation(System.Double,System.Double,System.Double)">
            <summary>
            Interpolate two values using cosine interpolation.
            </summary>
            <param name="a">A double-precision floating point number representing the first point.</param>
            <param name="b">A double-precision floating point number representing the second point.</param>
            <param name="x">A double-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CosineInterpolation(System.Single,System.Single,System.Single)">
            <summary>
            Interpolate two values using cosine interpolation.
            </summary>
            <param name="a">A single-precision floating point number representing the first point.</param>
            <param name="b">A single-precision floating point number representing the second point.</param>
            <param name="x">A single-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CubicInterpolation(System.Double,System.Double,System.Double)">
            <summary>
            Interpolate two values using cubic interpolation.
            </summary>
            <param name="a">A double-precision floating point number representing the first point.</param>
            <param name="b">A double-precision floating point number representing the second point.</param>
            <param name="x">A double-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.CubicInterpolation(System.Single,System.Single,System.Single)">
            <summary>
            Interpolate two values using cubic interpolation.
            </summary>
            <param name="a">A single-precision floating point number representing the first point.</param>
            <param name="b">A single-precision floating point number representing the second point.</param>
            <param name="x">A single-precision floating point number between 0 and 1 ( [0,1] ).</param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MathFunctions.IsPrime(System.Int64)">
            <summary>
            Checks if the given value is a prime number.
            </summary>
            <param name="value">The number to check.</param>
            <returns><c>True</c> if the number is a prime; otherwise, <c>False</c>.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.BooleanFunction">
            <summary>
            Functor that takes no arguments and returns a boolean.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.BooleanUnaryFunction">
            <summary>
            Functor that takes one booleans and returns a boolean. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.BooleanBinaryFunction">
            <summary>
            Functor that takes two booleans and returns a boolean. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.DoubleFunction">
            <summary>
            Functor that takes no arguments and returns a double.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.DoubleUnaryFunction">
            <summary>
            Functor that takes one double and returns a double. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.DoubleBinaryFunction">
            <summary>
            Functor that takes two doubles and returns a double. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.DoubleTernaryFunction">
            <summary>
            Functor that takes three doubles and returns a double. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.FloatFunction">
            <summary>
            Functor that takes no arguments and returns a float.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.FloatUnaryFunction">
            <summary>
            Functor that takes one float and returns a float. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.FloatBinaryFunction">
            <summary>
            Functor that takes two floats and returns a float. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.FloatTernaryFunction">
            <summary>
            Functor that takes three floats and returns a float. 
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.IntFunction">
            <summary>
            Functor that takes no arguments and returns an integer.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.IntUnaryFunction">
            <summary>
            Functor that takes one integer and returns an integer.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.IntBinaryFunction">
            <summary>
            Functor that takes two integers and returns an integer.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.IntTernaryFunction">
            <summary>
            Functor that takes three integers and returns an integer.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.ObjectFunction">
            <summary>
            Functor that takes no arguments and returns an object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.ObjectUnaryFunction">
            <summary>
            Functor that takes one object and returns an object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.ObjectBinaryFunction">
            <summary>
            Functor that takes one objects and returns an object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.ObjectTernaryFunction">
            <summary>
            Functor that takes three objects and returns an object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.StringFunction">
            <summary>
            Functor that takes no arguments and returns a string.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.StringUnaryFunction">
            <summary>
            Functor that takes one object and returns a string.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.StringBinaryFunction">
            <summary>
            Functor that takes two objects and returns a string.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.StringTernaryFunction">
            <summary>
            Functor that takes three objects and returns a string.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MathFunctions.Sign">
            <summary>
            Represents a value's sign (positive, negative or zero).
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.Sign.Negative">
            <summary>
            Negative sign
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.Sign.Zero">
            <summary>
            Zero
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.MathFunctions.Sign.Positive">
            <summary>
            Positive sign
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix2D">
            <summary>
            Represents a 2-dimentional double-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix2D.Zero">
            <summary>
            2-dimentional double-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix2D.Identity">
            <summary>
            2-dimentional double-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix2D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix2D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix2D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix2D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Add(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Add(Sharp3D.Math.Core.Matrix2D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Add(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Add(Sharp3D.Math.Core.Matrix2D,System.Double,Sharp3D.Math.Core.Matrix2D@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Subtract(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Subtract(Sharp3D.Math.Core.Matrix2D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Subtract(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Subtract(Sharp3D.Math.Core.Matrix2D,System.Double,Sharp3D.Math.Core.Matrix2D@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Multiply(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Multiply(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Transform(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Transform(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Transpose(Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix2D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Equality(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Inequality(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Addition(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Addition(Sharp3D.Math.Core.Matrix2D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Addition(System.Double,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Subtraction(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Subtraction(Sharp3D.Math.Core.Matrix2D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Multiply(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Matrix2D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2D.op_Multiply(Sharp3D.Math.Core.Matrix2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 2*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2D.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix2F">
            <summary>
            Represents a 2-dimentional single-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix2F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix2F.Zero">
            <summary>
            2-dimentional single-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix2F.Identity">
            <summary>
            2-dimentional single-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix2F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix2F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix2F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix2F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Add(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Add(Sharp3D.Math.Core.Matrix2F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Add(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Add(Sharp3D.Math.Core.Matrix2F,System.Single,Sharp3D.Math.Core.Matrix2F@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Subtract(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Subtract(Sharp3D.Math.Core.Matrix2F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Subtract(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Subtract(Sharp3D.Math.Core.Matrix2F,System.Single,Sharp3D.Math.Core.Matrix2F@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Multiply(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Multiply(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Transform(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Transform(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Transpose(Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix2F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Equality(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Inequality(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Addition(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Addition(Sharp3D.Math.Core.Matrix2F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Addition(System.Single,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Subtraction(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Subtraction(Sharp3D.Math.Core.Matrix2F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Multiply(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Matrix2F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix2F.op_Multiply(Sharp3D.Math.Core.Matrix2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix2F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 2*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix2F.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix3D">
            <summary>
            Represents a 3-dimentional double-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3D"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3D"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3D"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
            <param name="column3">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the third column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3D"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix3D.Zero">
            <summary>
            3-dimentional double-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix3D.Identity">
            <summary>
            3-dimentional double-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix3D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix3D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix3D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix3D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Add(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Add(Sharp3D.Math.Core.Matrix3D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Add(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Add(Sharp3D.Math.Core.Matrix3D,System.Double,Sharp3D.Math.Core.Matrix3D@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Subtract(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Subtract(Sharp3D.Math.Core.Matrix3D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Subtract(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Subtract(Sharp3D.Math.Core.Matrix3D,System.Double,Sharp3D.Math.Core.Matrix3D@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Multiply(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Multiply(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Transform(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Transform(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Transpose(Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix3D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Equality(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Inequality(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Addition(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Addition(Sharp3D.Math.Core.Matrix3D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Addition(System.Double,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Subtraction(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Subtraction(Sharp3D.Math.Core.Matrix3D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Multiply(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Matrix3D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3D.op_Multiply(Sharp3D.Math.Core.Matrix3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M13">
            <summary>
            Gets or sets the value of the [1,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M23">
            <summary>
            Gets or sets the value of the [2,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M31">
            <summary>
            Gets or sets the value of the [3,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M32">
            <summary>
            Gets or sets the value of the [3,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.M33">
            <summary>
            Gets or sets the value of the [3,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 3*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3D.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix3F">
            <summary>
            Represents a 3-dimentional single-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
            <param name="column3">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the third column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix3F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix3F.Zero">
            <summary>
            3-dimentional single-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix3F.Identity">
            <summary>
            3-dimentional single-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix3F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix3F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix3F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix3F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Add(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Add(Sharp3D.Math.Core.Matrix3F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Add(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Add(Sharp3D.Math.Core.Matrix3F,System.Single,Sharp3D.Math.Core.Matrix3F@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Subtract(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Subtract(Sharp3D.Math.Core.Matrix3F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Subtract(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Subtract(Sharp3D.Math.Core.Matrix3F,System.Single,Sharp3D.Math.Core.Matrix3F@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Multiply(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Multiply(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Transform(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Transform(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Transpose(Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Equality(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Inequality(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Addition(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Addition(Sharp3D.Math.Core.Matrix3F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Addition(System.Single,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Subtraction(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Subtraction(Sharp3D.Math.Core.Matrix3F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Multiply(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Matrix3F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix3F.op_Multiply(Sharp3D.Math.Core.Matrix3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M13">
            <summary>
            Gets or sets the value of the [1,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M23">
            <summary>
            Gets or sets the value of the [2,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M31">
            <summary>
            Gets or sets the value of the [3,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M32">
            <summary>
            Gets or sets the value of the [3,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.M33">
            <summary>
            Gets or sets the value of the [3,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 3*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix3F.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix4D">
            <summary>
            Represents a 4-dimentional double-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4D"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4D"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4D"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
            <param name="column3">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the third column.</param>
            <param name="column4">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the fourth column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4D"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix4D.Zero">
            <summary>
            4-dimentional double-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix4D.Identity">
            <summary>
            4-dimentional double-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix4D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix4D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix4D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix4D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Add(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Add(Sharp3D.Math.Core.Matrix4D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Add(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Add(Sharp3D.Math.Core.Matrix4D,System.Double,Sharp3D.Math.Core.Matrix4D@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Subtract(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Subtract(Sharp3D.Math.Core.Matrix4D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Subtract(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Subtract(Sharp3D.Math.Core.Matrix4D,System.Double,Sharp3D.Math.Core.Matrix4D@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Multiply(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Multiply(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transform(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transform(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transform(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transform(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transpose(Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix4D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Adjoint">
            <summary>
            Calculates the adjoint of the matrix.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the adjoint of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Minor(System.Int32,System.Int32)">
            <summary>
            Build a 3x3 matrix from from the current matrix without the given row and column.
            </summary>
            <param name="row">The row to remove.</param>
            <param name="column">The column to remove.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix3D"/> instance containing the result Minor.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Equality(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Inequality(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Addition(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Addition(Sharp3D.Math.Core.Matrix4D,System.Double)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Addition(System.Double,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Subtraction(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Subtraction(Sharp3D.Math.Core.Matrix4D,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Multiply(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4D.op_Multiply(Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M13">
            <summary>
            Gets or sets the value of the [1,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M14">
            <summary>
            Gets or sets the value of the [1,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M23">
            <summary>
            Gets or sets the value of the [2,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M24">
            <summary>
            Gets or sets the value of the [2,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M31">
            <summary>
            Gets or sets the value of the [3,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M32">
            <summary>
            Gets or sets the value of the [3,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M33">
            <summary>
            Gets or sets the value of the [3,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M34">
            <summary>
            Gets or sets the value of the [3,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M41">
            <summary>
            Gets or sets the value of the [4,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M42">
            <summary>
            Gets or sets the value of the [4,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M43">
            <summary>
            Gets or sets the value of the [4,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.M44">
            <summary>
            Gets or sets the value of the [4,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 2*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4D.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Matrix4F">
            <summary>
            Represents a 4-dimentional single-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> structure with the specified values.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> structure with the specified values.
            </summary>
            <param name="elements">An array containing the matrix values in row-major order.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> structure with the specified values.
            </summary>
            <param name="column1">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the first column.</param>
            <param name="column2">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the second column.</param>
            <param name="column3">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the third column.</param>
            <param name="column4">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance holding values for the fourth column.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> class using a given matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Matrix4F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix4F.Zero">
            <summary>
            4-dimentional single-precision floating point zero matrix.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Matrix4F.Identity">
            <summary>
            4-dimentional single-precision floating point identity matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix4F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix4F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Matrix4F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Matrix4F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Add(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Add(Sharp3D.Math.Core.Matrix4F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Add(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F@)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Add(Sharp3D.Math.Core.Matrix4F,System.Single,Sharp3D.Math.Core.Matrix4F@)">
            <summary>
            Adds a matrix and a scalar and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Subtract(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Subtract(Sharp3D.Math.Core.Matrix4F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Subtract(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F@)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Subtract(Sharp3D.Math.Core.Matrix4F,System.Single,Sharp3D.Math.Core.Matrix4F@)">
            <summary>
            Subtracts a scalar from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Multiply(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Multiply(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F@)">
            <summary>
            Multiplies two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transform(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transform(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transform(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transform(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Transforms a given vector by a matrix and put the result in a vector.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transpose(Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Matrix4F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Determinant">
            <summary>
            Calculates the determinant value of the matrix.
            </summary>
            <returns>The determinant value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Adjoint">
            <summary>
            Calculates the adjoint of the matrix.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the adjoint of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Minor(System.Int32,System.Int32)">
            <summary>
            Build a 3x3 matrix from from the current matrix without the given row and column.
            </summary>
            <param name="row">The row to remove.</param>
            <param name="column">The column to remove.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix3F"/> instance containing the result Minor.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Trace">
            <summary>
            Calculates the trace the matrix which is the sum of its diagonal elements.
            </summary>
            <returns>Returns the trace value of the matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.Transpose">
            <summary>
            Transposes this matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Equality(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Inequality(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Addition(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Addition(Sharp3D.Math.Core.Matrix4F,System.Single)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Addition(System.Single,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Adds a matrix and a scalar.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Subtraction(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Subtraction(Sharp3D.Math.Core.Matrix4F,System.Single)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="s">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Multiply(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Matrix4F.op_Multiply(Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Transforms a given vector by a matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</param>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M11">
            <summary>
            Gets or sets the value of the [1,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M12">
            <summary>
            Gets or sets the value of the [1,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M13">
            <summary>
            Gets or sets the value of the [1,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M14">
            <summary>
            Gets or sets the value of the [1,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M21">
            <summary>
            Gets or sets the value of the [2,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M22">
            <summary>
            Gets or sets the value of the [2,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M23">
            <summary>
            Gets or sets the value of the [2,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M24">
            <summary>
            Gets or sets the value of the [2,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M31">
            <summary>
            Gets or sets the value of the [3,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M32">
            <summary>
            Gets or sets the value of the [3,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M33">
            <summary>
            Gets or sets the value of the [3,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M34">
            <summary>
            Gets or sets the value of the [3,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M41">
            <summary>
            Gets or sets the value of the [4,1] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M42">
            <summary>
            Gets or sets the value of the [4,2] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M43">
            <summary>
            Gets or sets the value of the [4,3] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.M44">
            <summary>
            Gets or sets the value of the [4,4] matrix element.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.Item(System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by an index
            where index = 2*row + column.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Matrix4F.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MatrixD">
            <summary>
            Represents a n-dimentional double-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixD"/> class with the specified size.
            </summary>
            <param name="rows">Number of rows.</param>
            <param name="columns">Number of columns.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.#ctor(System.Double[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixD"/> class with the give data.
            </summary>
            <param name="data">An 2 dimentional array of double-precision floating point values.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.#ctor(Sharp3D.Math.Core.MatrixD)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixD"/> using a given matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixD"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.MatrixD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.MatrixD"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.MatrixD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.MatrixD"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Add(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Add(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Subtract(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
            <exception cref="T:System.ArgumentException">Matrix dimentions do not match.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Subtract(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
            <exception cref="T:System.ArgumentException">Matrix dimentions do not match.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Multiply(Sharp3D.Math.Core.MatrixD,System.Double)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="s">A double-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Multiply(Sharp3D.Math.Core.MatrixD,System.Double,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Multiplies a matrix by a scalar and put the result in a given matrix instance.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="s">A double-precision floating point value.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Negate(Sharp3D.Math.Core.MatrixD)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Transpose(Sharp3D.Math.Core.MatrixD)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.EqualDimentions(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Tests whether the dimentions of two given matrices are equal.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns><see langword="true"/> if the dimentions of the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.MatrixD"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Submatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowStart">Row index to start extraction from.</param>
            <param name="rowEnd">Row index to end extraction at.</param>
            <param name="colStart">Column index to start extraction from.</param>
            <param name="colEnd">Column index to end extraction at.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Submatrix(System.Int32[],System.Int32[])">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowIndices">An array of row indices.</param>
            <param name="colIndices">An array of column indices.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Submatrix(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowStart">Row index to start extraction from.</param>
            <param name="rowEnd">Row index to end extraction at.</param>
            <param name="colIndices">An array of column indices.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.Submatrix(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowIndices">An array of row indices.</param>
            <param name="colStart">Column index to start extraction from.</param>
            <param name="colEnd">Column index to end extraction at.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_Equality(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_Inequality(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_UnaryNegation(Sharp3D.Math.Core.MatrixD)">
            <summary>
            Negates the values of a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_Addition(Sharp3D.Math.Core.MatrixD,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_Multiply(Sharp3D.Math.Core.MatrixD,System.Double)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="s">A double-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixD.op_Multiply(System.Double,Sharp3D.Math.Core.MatrixD)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance.</param>
            <param name="s">A double-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixD"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.Rows">
            <summary>
            Gets the number of rows in the matrix.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.Columns">
            <summary>
            Gets the number of columns in the matrix.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.IsSquare">
            <summary>
            Gets a value indicating whether the matrix is square.
            </summary>
            <value>True if the matrix is square; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.IsSymmetric">
            <summary>
            Gets a value indicating whether the matrix is symmetric.
            </summary>
            <value>True if the matrix is symmetric; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.Trace">
            <summary>
            Gets the value of the matrix's trace.
            </summary>
            <value>A double-precision floating point number.</value>
            <remarks>The matrix trace is the sum of its diagonal elements.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixD.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.MatrixF">
            <summary>
            Represents a n-dimentional single-precision floating point matrix.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixF"/> class with the specified size.
            </summary>
            <param name="rows">Number of rows.</param>
            <param name="columns">Number of columns.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.#ctor(System.Single[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixF"/> class with the give data.
            </summary>
            <param name="data">An 2 dimentional array of single-precision floating point values.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.#ctor(Sharp3D.Math.Core.MatrixF)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixF"/> using a given matrix.
            </summary>
            <param name="matrix">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.MatrixF"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.MatrixF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.MatrixF"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.MatrixF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.MatrixF"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Add(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Add(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Adds two matrices and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Subtract(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Subtracts a matrix from a matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to subtract.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the difference.</returns>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
            <exception cref="T:System.ArgumentException">Matrix dimentions do not match.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Subtract(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Subtracts a matrix from a matrix and put the result in a third matrix.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to subtract from.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to subtract.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to hold the result.</param>
            <remarks>result[x][y] = a[x][y] - b[x][y]</remarks>
            <exception cref="T:System.ArgumentException">Matrix dimentions do not match.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Multiply(Sharp3D.Math.Core.MatrixF,System.Single)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="s">A single-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Multiply(Sharp3D.Math.Core.MatrixF,System.Single,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Multiplies a matrix by a scalar and put the result in a given matrix instance.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="s">A single-precision floating point value.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Negate(Sharp3D.Math.Core.MatrixF)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Transpose(Sharp3D.Math.Core.MatrixF)">
            <summary>
            Transposes a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance transposed matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.EqualDimentions(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Tests whether the dimentions of two given matrices are equal.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns><see langword="true"/> if the dimentions of the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.MatrixF"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Submatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowStart">Row index to start extraction from.</param>
            <param name="rowEnd">Row index to end extraction at.</param>
            <param name="colStart">Column index to start extraction from.</param>
            <param name="colEnd">Column index to end extraction at.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Submatrix(System.Int32[],System.Int32[])">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowIndices">An array of row indices.</param>
            <param name="colIndices">An array of column indices.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Submatrix(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowStart">Row index to start extraction from.</param>
            <param name="rowEnd">Row index to end extraction at.</param>
            <param name="colIndices">An array of column indices.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.Submatrix(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Extracts a sub matrix from the current matrix.
            </summary>
            <param name="rowIndices">An array of row indices.</param>
            <param name="colStart">Column index to start extraction from.</param>
            <param name="colEnd">Column index to end extraction at.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the extracted sub matrix.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_Equality(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Tests whether two specified matrices are equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_Inequality(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Tests whether two specified matrices are not equal.
            </summary>
            <param name="a">The left-hand matrix.</param>
            <param name="b">The right-hand matrix.</param>
            <returns><see langword="true"/> if the two matrices are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_UnaryNegation(Sharp3D.Math.Core.MatrixF)">
            <summary>
            Negates the values of a matrix.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_Addition(Sharp3D.Math.Core.MatrixF,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_Multiply(Sharp3D.Math.Core.MatrixF,System.Single)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="s">A single-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.MatrixF.op_Multiply(System.Single,Sharp3D.Math.Core.MatrixF)">
            <summary>
            Multiplies a matrix by a scalar.
            </summary>
            <param name="m">A <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance.</param>
            <param name="s">A single-precision floating point value.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.MatrixF"/> instance containing the result.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.Rows">
            <summary>
            Gets the number of rows in the matrix.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.Columns">
            <summary>
            Gets the number of columns in the matrix.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.IsSquare">
            <summary>
            Gets a value indicating whether the matrix is square.
            </summary>
            <value>True if the matrix is square; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.IsSymmetric">
            <summary>
            Gets a value indicating whether the matrix is symmetric.
            </summary>
            <value>True if the matrix is symmetric; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.Trace">
            <summary>
            Gets the value of the matrix's trace.
            </summary>
            <value>A single-precision floating point number.</value>
            <remarks>The matrix trace is the sum of its diagonal elements.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.MatrixF.Item(System.Int32,System.Int32)">
            <summary>
            Indexer allowing to access the matrix elements by row and column.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.ParseException">
            <summary>
            Base class for all exceptions thrown by Sharp3D.Math.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Sharp3DMathException">
            <summary>
            Base class for all exceptions thrown by Sharp3D.Math.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Sharp3DMathException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Sharp3DMathException"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Sharp3DMathException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Sharp3DMathException"/> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Sharp3DMathException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Sharp3DMathException"/> class 
            with a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="inner">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception is raised 
            in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:Sharp3D.Math.Core.Sharp3DMathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Sharp3DMathException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ParseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ParseException"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.ParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ParseException"/> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.ParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ParseException"/> class 
            with a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="inner">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception is raised 
            in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:Sharp3D.Math.Core.ParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.ParseException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionD">
            <summary>
            Represents a double-precision floating-point quaternion.
            </summary>
            <remarks>
            <para>
            A quaternion can be thought of as a 4-Dimentional vector of form:
            q = [w, x, y, z] = w + xi + yj +zk.
            </para>
            <para>
            A Quaternion is often written as q = s + V where S represents
            the scalar part (w component) and V is a 3D vector representing
            the imaginery coefficients (x,y,z components).
            </para>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> class with the specified coordinates.
            </summary>
            <param name="w">The quaternions's W coordinate.</param>
            <param name="x">The quaternions's X coordinate.</param>
            <param name="y">The quaternions's Y coordinate.</param>
            <param name="z">The quaternions's Z coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.#ctor(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> class with the specified coordinates.
            </summary>
            <param name="w">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.#ctor(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.Zero">
            <summary>
            Double-precision floating point zero quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.Identity">
            <summary>
            Double-precision floating point identity quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.XAxis">
            <summary>
            Double-precision floating point X-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.YAxis">
            <summary>
            Double-precision floating point Y-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.ZAxis">
            <summary>
            Double-precision floating point Z-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionD.WAxis">
            <summary>
            Double-precision floating point W-Axis quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.QuaternionD"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.QuaternionD"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Add(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Add(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD@)">
            <summary>
            Adds two quaternions and put the result in the third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Subtract(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Subtracts a quaternion from a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Subtract(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD@)">
            <summary>
            Subtracts a quaternion from a quaternion and puts the result into a third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Multiply(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/>.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Multiply(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD@)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/> and put the result in a third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Multiply(Sharp3D.Math.Core.QuaternionD,System.Double)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Multiply(Sharp3D.Math.Core.QuaternionD,System.Double,Sharp3D.Math.Core.QuaternionD@)">
            <summary>
            Multiplies a quaternion by a scalar and put the result in a third quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Divide(Sharp3D.Math.Core.QuaternionD,System.Double)">
            <summary>
            Divides a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Divide(Sharp3D.Math.Core.QuaternionD,System.Double,Sharp3D.Math.Core.QuaternionD@)">
            <summary>
            Divides a quaternion by a scalar and put the result in a third quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.DotProduct(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Calculates the dot product of two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Log(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Calculates the logarithm of a given quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>The quaternion's logarithm.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Exp(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Calculates the exponent of a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>The quaternion's exponent.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.QuaternionToMatrix(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Converts a given <see cref="T:Sharp3D.Math.Core.QuaternionD"/> to a matrix.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4D"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.FromAxisAngle(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Turn an axis and an angle to a quaternion.
            </summary>
            <param name="axis">A unit <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="angle">An angle.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.GetModulus">
            <summary>
            Gets the modulus of the quaternion.
            </summary>
            <returns>
            The modulus of the quaternion:  sqrt(w*w + x*x + y*y + z*z).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.GetModulusSquared">
            <summary>
            Gets the squared modulus of the quaternion.
            </summary>
            <returns>
            The squared modulus of the quaternion:  (w*w + x*x + y*y + z*z).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.GetConjugate">
            <summary>
            Gets the conjugate of the quaternion.
            </summary>
            <returns>
            The conjugate of the quaternion.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Inverse">
            <summary>
            Inverts the quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Normalize">
            <summary>
            Normelizes the quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.ClampZero(System.Double)">
            <summary>
            Clamps quaternion values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The quaternion values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.ClampZero">
            <summary>
            Clamps quaternion values to zero using the default tolerance value.
            </summary>
            <remarks>
            The quaternion values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonD"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Equality(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Tests whether two specified quaternions are equal.
            </summary>
            <param name="a">The left-hand quaternion.</param>
            <param name="b">The right-hand quaternion.</param>
            <returns><see langword="true"/> if the two quaternions are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Inequality(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Tests whether two specified quaternions are not equal.
            </summary>
            <param name="a">The left-hand quaternion.</param>
            <param name="b">The right-hand quaternion.</param>
            <returns><see langword="true"/> if the two quaternions are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Addition(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Subtraction(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Subtracts a quaternion from a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Multiply(Sharp3D.Math.Core.QuaternionD,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/>.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionD"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Multiply(Sharp3D.Math.Core.QuaternionD,System.Double)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Multiply(System.Double,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Division(Sharp3D.Math.Core.QuaternionD,System.Double)">
            <summary>
            Divides a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Division(System.Double,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Divides a scalar by a quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Explicit(Sharp3D.Math.Core.QuaternionD)~System.Double[]">
            <summary>
            Converts the quaternion to an array of double-precision floating point numbers.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>An array of double-precision floating point numbers.</returns>
            <remarks>The array is [w, x, y, z].</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionD.op_Explicit(Sharp3D.Math.Core.QuaternionD)~Sharp3D.Math.Core.DoubleArrayList">
            <summary>
            Converts the quaternion to an array of double-precision floating point numbers.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionD"/> instance.</param>
            <returns>An array of double-precision floating point numbers.</returns>
            <remarks>The array is [w, x, y, z].</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionD.W">
            <summery>
            Gets or sets the w-coordinate of this quaternion.
            </summery>
            <value>The w-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionD.X">
            <summery>
            Gets or sets the x-coordinate of this quaternion.
            </summery>
            <value>The x-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionD.Y">
            <summery>
            Gets or sets the y-coordinate of this quaternion.
            </summery>
            <value>The y-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionD.Z">
            <summery>
            Gets or sets the z-coordinate of this quaternion.
            </summery>
            <value>The z-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionD.Item(System.Int32)">
            <summary>
            Indexer ( [w, x, y, z] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionDConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.QuaternionDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionDCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </summary>
            <remarks>
            <b>IQuaternionDCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDCollection.CopyTo(Sharp3D.Math.Core.QuaternionD[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IQuaternionDEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IQuaternionDEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IQuaternionDCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionDList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IQuaternionDList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.Add(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.Contains(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.IndexOf(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> in the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.Insert(System.Int32,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element into the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.Remove(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            from the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionDList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionDCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IQuaternionDList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionDEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </summary>
            <remarks>
            <b>IQuaternionDEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionDEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionDEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IQuaternionDEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IQuaternionDEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionDArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </summary>
            <remarks><para>
            <b>QuaternionDArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.#ctor(Sharp3D.Math.Core.QuaternionDArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.#ctor(Sharp3D.Math.Core.QuaternionD[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Add(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.AddRange(Sharp3D.Math.Core.QuaternionDArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.AddRange(Sharp3D.Math.Core.QuaternionD[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.BinarySearch(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Contains(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.QuaternionDArrayList.Clone"/> 
            because <see cref="T:Sharp3D.Math.Core.QuaternionD"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>QuaternionDArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>QuaternionDArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.CopyTo(Sharp3D.Math.Core.QuaternionD[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.CopyTo(Sharp3D.Math.Core.QuaternionD[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IQuaternionDEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IQuaternionDEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.IndexOf(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Insert(System.Int32,Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element into the
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.ReadOnly(Sharp3D.Math.Core.QuaternionDArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Remove(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Synchronized(Sharp3D.Math.Core.QuaternionDArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionD"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionDArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionDArrayList.Unique(Sharp3D.Math.Core.QuaternionDArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>QuaternionDArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> elements in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.QuaternionDArrayList.Unique(Sharp3D.Math.Core.QuaternionDArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.QuaternionDArrayList.Unique(Sharp3D.Math.Core.QuaternionDArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.QuaternionD"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>QuaternionDArrayList</b> already contains the
            specified element at a different index, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionDArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionD"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>QuaternionDArrayList</b> already contains the
            specified element at a different index, and the <b>QuaternionDArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionDArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.QuaternionDArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionF">
            <summary>
            Represents a single-precision floating-point quaternion.
            </summary>
            <remarks>
            <para>
            A quaternion can be thought of as a 4-Dimentional vector of form:
            q = [w, x, y, z] = w + xi + yj +zk.
            </para>
            <para>
            A Quaternion is often written as q = s + V where S represents
            the scalar part (w component) and V is a 3D vector representing
            the imaginery coefficients (x,y,z components).
            </para>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> class with the specified coordinates.
            </summary>
            <param name="w">The quaternions's W coordinate.</param>
            <param name="x">The quaternions's X coordinate.</param>
            <param name="y">The quaternions's Y coordinate.</param>
            <param name="z">The quaternions's Z coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.#ctor(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> class with the specified coordinates.
            </summary>
            <param name="w">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.#ctor(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.Zero">
            <summary>
            single-precision floating point zero quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.Identity">
            <summary>
            single-precision floating point identity quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.XAxis">
            <summary>
            single-precision floating point X-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.YAxis">
            <summary>
            single-precision floating point Y-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.ZAxis">
            <summary>
            single-precision floating point Z-Axis quaternion.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.QuaternionF.WAxis">
            <summary>
            single-precision floating point W-Axis quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.QuaternionF"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.QuaternionF"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Add(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Add(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF@)">
            <summary>
            Adds two quaternions and put the result in the third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Subtract(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Subtracts a quaternion from a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Subtract(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF@)">
            <summary>
            Subtracts a quaternion from a quaternion and puts the result into a third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Multiply(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/>.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Multiply(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF@)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/> and put the result in a third quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Multiply(Sharp3D.Math.Core.QuaternionF,System.Single)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Multiply(Sharp3D.Math.Core.QuaternionF,System.Single,Sharp3D.Math.Core.QuaternionF@)">
            <summary>
            Multiplies a quaternion by a scalar and put the result in a third quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Divide(Sharp3D.Math.Core.QuaternionF,System.Single)">
            <summary>
            Divides a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Divide(Sharp3D.Math.Core.QuaternionF,System.Single,Sharp3D.Math.Core.QuaternionF@)">
            <summary>
            Divides a quaternion by a scalar and put the result in a third quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="result">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.DotProduct(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Calculates the dot product of two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Log(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Calculates the logarithm of a given quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>The quaternion's logarithm.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Exp(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Calculates the exponent of a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>The quaternion's exponent.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.QuaternionToMatrix(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Converts a given <see cref="T:Sharp3D.Math.Core.QuaternionF"/> to a matrix.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Matrix4F"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.FromAxisAngle(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Turn an axis and an angle to a quaternion.
            </summary>
            <param name="axis">A unit <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="angle">An angle.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.GetModulus">
            <summary>
            Gets the modulus of the quaternion.
            </summary>
            <returns>
            The modulus of the quaternion:  sqrt(w*w + x*x + y*y + z*z).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.GetModulusSquared">
            <summary>
            Gets the squared modulus of the quaternion.
            </summary>
            <returns>
            The squared modulus of the quaternion:  (w*w + x*x + y*y + z*z).
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.GetConjugate">
            <summary>
            Gets the conjugate of the quaternion.
            </summary>
            <returns>
            The conjugate of the quaternion.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Inverse">
            <summary>
            Inverts the quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Normalize">
            <summary>
            Normelizes the quaternion.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.ClampZero(System.Single)">
            <summary>
            Clamps quaternion values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The quaternion values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.ClampZero">
            <summary>
            Clamps quaternion values to zero using the default tolerance value.
            </summary>
            <remarks>
            The quaternion values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonF"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Equality(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Tests whether two specified quaternions are equal.
            </summary>
            <param name="a">The left-hand quaternion.</param>
            <param name="b">The right-hand quaternion.</param>
            <returns><see langword="true"/> if the two quaternions are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Inequality(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Tests whether two specified quaternions are not equal.
            </summary>
            <param name="a">The left-hand quaternion.</param>
            <param name="b">The right-hand quaternion.</param>
            <returns><see langword="true"/> if the two quaternions are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Addition(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Subtraction(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Subtracts a quaternion from a quaternion.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance containing the difference.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Multiply(Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Multiplies quaternion <paramref name="a"/> by quaternion <paramref name="b"/>.
            </summary>
            <param name="a">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="b">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.QuaternionF"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Multiply(Sharp3D.Math.Core.QuaternionF,System.Single)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Multiply(System.Single,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Multiplies a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Division(Sharp3D.Math.Core.QuaternionF,System.Single)">
            <summary>
            Divides a quaternion by a scalar.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Division(System.Single,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Divides a scalar by a quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance to hold the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Explicit(Sharp3D.Math.Core.QuaternionF)~System.Single[]">
            <summary>
            Converts the quaternion to an array of single-precision floating point numbers.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>An array of single-precision floating point numbers.</returns>
            <remarks>The array is [w, x, y, z].</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionF.op_Explicit(Sharp3D.Math.Core.QuaternionF)~Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Converts the quaternion to an array of single-precision floating point numbers.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>An array of single-precision floating point numbers.</returns>
            <remarks>The array is [w, x, y, z].</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionF.W">
            <summery>
            Gets or sets the w-coordinate of this quaternion.
            </summery>
            <value>The w-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionF.X">
            <summery>
            Gets or sets the x-coordinate of this quaternion.
            </summery>
            <value>The x-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionF.Y">
            <summery>
            Gets or sets the y-coordinate of this quaternion.
            </summery>
            <value>The y-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionF.Z">
            <summery>
            Gets or sets the z-coordinate of this quaternion.
            </summery>
            <value>The z-coordinate of this quaternion.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionF.Item(System.Int32)">
            <summary>
            Indexer ( [w, x, y, z] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionFConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.QuaternionFConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionFCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </summary>
            <remarks>
            <b>IQuaternionFCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFCollection.CopyTo(Sharp3D.Math.Core.QuaternionF[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IQuaternionFEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IQuaternionFEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IQuaternionFCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionFList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IQuaternionFList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.Add(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.Contains(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.IndexOf(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> in the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.Insert(System.Int32,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element into the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.Remove(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            from the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IQuaternionFList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IQuaternionFCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IQuaternionFList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IQuaternionFEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </summary>
            <remarks>
            <b>IQuaternionFEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IQuaternionFEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IQuaternionFEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IQuaternionFEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IQuaternionFEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionFArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </summary>
            <remarks><para>
            <b>QuaternionFArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.#ctor(Sharp3D.Math.Core.QuaternionFArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.#ctor(Sharp3D.Math.Core.QuaternionF[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Add(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.AddRange(Sharp3D.Math.Core.QuaternionFArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.AddRange(Sharp3D.Math.Core.QuaternionF[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.BinarySearch(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Contains(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Copy">
            <summary>
            Creates a deep copy of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <returns>A deep copy of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</returns>
            <remarks><para>
            <b>Copy</b> has the same effect as <see cref="M:Sharp3D.Math.Core.QuaternionFArrayList.Clone"/> 
            because <see cref="T:Sharp3D.Math.Core.QuaternionF"/> is a value type.
            </para><para>
            <b>Copy</b> never returns a <b>QuaternionFArrayList</b> with a read-only,
            synchronized, or unique wrapper, whereas <b>Clone</b> preserves any
            wrappers around this <b>QuaternionFArrayList</b>.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.CopyTo(Sharp3D.Math.Core.QuaternionF[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.CopyTo(Sharp3D.Math.Core.QuaternionF[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements copied from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IQuaternionFEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IQuaternionFEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.IndexOf(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Insert(System.Int32,Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element into the
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.ReadOnly(Sharp3D.Math.Core.QuaternionFArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Remove(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Synchronized(Sharp3D.Math.Core.QuaternionFArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.QuaternionF"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>QuaternionFArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionFArrayList.Unique(Sharp3D.Math.Core.QuaternionFArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>QuaternionFArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> elements in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.QuaternionFArrayList.Unique(Sharp3D.Math.Core.QuaternionFArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.QuaternionFArrayList.Unique(Sharp3D.Math.Core.QuaternionFArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.QuaternionF"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>QuaternionFArrayList</b> already contains the
            specified element at a different index, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.QuaternionFArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.QuaternionF"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>QuaternionFArrayList</b> already contains the
            specified element at a different index, and the <b>QuaternionFArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.QuaternionFArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.QuaternionFArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.QuaternionNotInvertibleException">
            <exception cref="T:System.ApplicationException">Thrown when trying to invert an uninvertible quaternion.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionNotInvertibleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionNotInvertibleException"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionNotInvertibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionNotInvertibleException"/> class with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionNotInvertibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionNotInvertibleException"/> class 
            with a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="inner">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception is raised 
            in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:Sharp3D.Math.Core.QuaternionNotInvertibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.QuaternionNotInvertibleException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2D">
            <summary>
            Represents 2-Dimentional vector of double-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2D"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.#ctor(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2D"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2D.Zero">
            <summary>
            2-Dimentional double-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2D.XAxis">
            <summary>
            2-Dimentional double-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2D.YAxis">
            <summary>
            2-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector2D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector2D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector2D"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector2D"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2D"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Add(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Add(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Add(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Add(Sharp3D.Math.Core.Vector2D,System.Double,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(Sharp3D.Math.Core.Vector2D,System.Double,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Subtract(System.Double,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(Sharp3D.Math.Core.Vector2D,System.Double,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Divide(System.Double,Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Multiply(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Multiply(Sharp3D.Math.Core.Vector2D,System.Double,Sharp3D.Math.Core.Vector2D@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.DotProduct(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.KrossProduct(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Calculates the Kross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>The Kross product value.</returns>
            <remarks>
            <p>
            The Kross product is defined as:
            Kross(u,v) = u.X*v.Y - u.Y*v.X.
            </p>
            <p>
            The operation is related to the cross product in 3D given by (x0, y0, 0) X (x1, y1, 0) = (0, 0, Kross((x0, y0), (x1, y1))).
            The operation has the property that Kross(u, v) = -Kross(v, u).
            </p>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Negate(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.ApproxEqual(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.ApproxEqual(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Perp">
            <summary>
            Returns a perpendicular vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</returns>
            <remarks>
            The return value is the vector rotated by 90 degrees clockwise.
            If the V=(x,y) then V.Perp()=(y,-x).
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.UnitPerp">
            <summary>
            Returns a normalized perpendicular vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</returns>
            <remarks>
            The return value is the vector rotated by 90 degrees clockwise.
            If the V=(x,y) then V.Perp()=(y,-x) normalized.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.ClampZero(System.Double)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonD"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Equality(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Inequality(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_GreaterThan(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_LessThan(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_LessThanOrEqual(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_UnaryNegation(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Addition(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Addition(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Addition(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Subtraction(Sharp3D.Math.Core.Vector2D,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Subtraction(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Subtraction(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Multiply(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Multiply(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Division(Sharp3D.Math.Core.Vector2D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Division(System.Double,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Explicit(Sharp3D.Math.Core.Vector2D)~System.Double[]">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2D.op_Explicit(Sharp3D.Math.Core.Vector2D)~Sharp3D.Math.Core.DoubleArrayList">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2D.X">
            <summery>
            Gets or sets the x-coordinate of this vector.
            </summery>
            <value>The x-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2D.Y">
            <summery>
            Gets or sets the y-coordinate of this vector.
            </summery>
            <value>The y-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2D.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2DConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector2D"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector2DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2F">
            <summary>
            Represents 2-Dimentional vector of single-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.#ctor(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2F.Zero">
            <summary>
            2-Dimentional single-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2F.XAxis">
            <summary>
            2-Dimentional single-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector2F.YAxis">
            <summary>
            2-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector2F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector2F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector2F"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector2F"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2F"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Add(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Add(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Add(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Add(Sharp3D.Math.Core.Vector2F,System.Single,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(Sharp3D.Math.Core.Vector2F,System.Single,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Subtract(System.Single,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(Sharp3D.Math.Core.Vector2F,System.Single,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Divide(System.Single,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Multiply(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Multiply(Sharp3D.Math.Core.Vector2F,System.Single,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.DotProduct(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.KrossProduct(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the Kross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2D"/> instance.</param>
            <returns>The Kross product value.</returns>
            <remarks>
            <p>
            The Kross product is defined as:
            Kross(u,v) = u.X*v.Y - u.Y*v.X.
            </p>
            <p>
            The operation is related to the cross product in 3D given by (x0, y0, 0) X (x1, y1, 0) = (0, 0, Kross((x0, y0), (x1, y1))).
            The operation has the property that Kross(u, v) = -Kross(v, u).
            </p>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Negate(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.ApproxEqual(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.ApproxEqual(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Perp">
            <summary>
            Returns a perpendicular vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</returns>
            <remarks>
            The return value is the vector rotated by 90 degrees clockwise.
            If the V=(x,y) then V.Perp()=(y,-x).
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.UnitPerp">
            <summary>
            Returns a normalized perpendicular vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</returns>
            <remarks>
            The return value is the vector rotated by 90 degrees clockwise.
            If the V=(x,y) then V.Perp()=(y,-x) normalized.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.ClampZero(System.Single)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonF"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Equality(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Inequality(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_GreaterThan(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_LessThan(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_LessThanOrEqual(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_UnaryNegation(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Addition(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Addition(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Addition(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Subtraction(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Subtraction(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Subtraction(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Multiply(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Multiply(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Division(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Division(System.Single,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Explicit(Sharp3D.Math.Core.Vector2F)~System.Single[]">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2F.op_Explicit(Sharp3D.Math.Core.Vector2F)~Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2F.X">
            <summary>
            Gets or sets the x-coordinate of this vector.
            </summary>
            <value>The x-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2F.Y">
            <summary>
            Gets or sets the y-coordinate of this vector.
            </summary>
            <value>The y-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2F.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2FConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector2F"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector2FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3D">
            <summary>
            Represents 3-Dimentional vector of double-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3D"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
            <param name="z">The vector's Z coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.#ctor(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3D"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3D.Zero">
            <summary>
            3-Dimentional double-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3D.XAxis">
            <summary>
            3-Dimentional double-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3D.YAxis">
            <summary>
            3-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3D.ZAxis">
            <summary>
            3-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector3D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector3D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector3D"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector3D"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector3D"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Add(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Add(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Add(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Add(Sharp3D.Math.Core.Vector3D,System.Double,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(Sharp3D.Math.Core.Vector3D,System.Double,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Subtract(System.Double,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(Sharp3D.Math.Core.Vector3D,System.Double,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Divide(System.Double,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Multiply(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Multiply(Sharp3D.Math.Core.Vector3D,System.Double,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.DotProduct(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.CrossProduct(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the cross product result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.CrossProduct(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D@)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance to hold the cross product result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Negate(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.ApproxEqual(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.ApproxEqual(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.GetUnit">
            <summary>
            Returns a new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance representing the unit vector of the current vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y + Z*Z))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y + Z*Z)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.ClampZero(System.Double)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonD"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Equality(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Inequality(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_GreaterThan(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_LessThan(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_LessThanOrEqual(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_UnaryNegation(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Addition(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Addition(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Addition(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Subtraction(Sharp3D.Math.Core.Vector3D,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Subtraction(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Subtraction(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Multiply(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Multiply(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Division(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Division(System.Double,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Explicit(Sharp3D.Math.Core.Vector3D)~System.Double[]">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3D.op_Explicit(Sharp3D.Math.Core.Vector3D)~Sharp3D.Math.Core.DoubleArrayList">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3D.X">
            <summary>
            Gets or sets the x-coordinate of this vector.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3D.Y">
            <summary>
            Gets or sets the y-coordinate of this vector.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3D.Z">
            <summary>
            Gets or sets the z-coordinate of this vector.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3D.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3DConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector3D"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector3DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3F">
            <summary>
            Represents 3-Dimentional vector of single-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
            <param name="z">The vector's Z coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.#ctor(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3F.Zero">
            <summary>
            3-Dimentional single-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3F.XAxis">
            <summary>
            3-Dimentional single-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3F.YAxis">
            <summary>
            3-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector3F.ZAxis">
            <summary>
            3-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector3F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector3F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector3F"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector3F"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Add(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Add(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Add(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Add(Sharp3D.Math.Core.Vector3F,System.Single,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(Sharp3D.Math.Core.Vector3F,System.Single,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Subtract(System.Single,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(Sharp3D.Math.Core.Vector3F,System.Single,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Divide(System.Single,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Multiply(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Multiply(Sharp3D.Math.Core.Vector3F,System.Single,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.DotProduct(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.CrossProduct(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the cross product result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.CrossProduct(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance to hold the cross product result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Negate(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.ApproxEqual(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.ApproxEqual(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.GetUnit">
            <summary>
            Returns a new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance representing the unit vector of the current vector.
            </summary>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y + Z*Z))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y + Z*Z)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.ClampZero(System.Single)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonF"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Equality(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Inequality(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_GreaterThan(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_LessThan(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_LessThanOrEqual(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_UnaryNegation(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Addition(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Addition(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Addition(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Subtraction(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Subtraction(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Subtraction(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Multiply(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Multiply(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Division(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Division(System.Single,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Explicit(Sharp3D.Math.Core.Vector3F)~System.Single[]">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3F.op_Explicit(Sharp3D.Math.Core.Vector3F)~Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3F.X">
            <summary>
            Gets or sets the x-coordinate of this vector.
            </summary>
            <value>The x-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3F.Y">
            <summary>
            Gets or sets the y-coordinate of this vector.
            </summary>
            <value>The y-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3F.Z">
            <summary>
            Gets or sets the z-coordinate of this vector.
            </summary>
            <value>The z-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3F.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3FConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector3F"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector3FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4D">
            <summary>
            Represents 4-Dimentional vector of double-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4D"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
            <param name="z">The vector's Z coordinate.</param>
            <param name="w">The vector's W coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.#ctor(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4D"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.#ctor(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4D"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4D"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4D.Zero">
            <summary>
            4-Dimentional double-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4D.XAxis">
            <summary>
            4-Dimentional double-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4D.YAxis">
            <summary>
            4-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4D.ZAxis">
            <summary>
            4-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4D.WAxis">
            <summary>
            4-Dimentional double-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector4D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector4D"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector4D"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector4D"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector4D"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Add(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Add(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Add(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Add(Sharp3D.Math.Core.Vector4D,System.Double,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(Sharp3D.Math.Core.Vector4D,System.Double,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Subtract(System.Double,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(Sharp3D.Math.Core.Vector4D,System.Double,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Divide(System.Double,Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Multiply(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Multiply(Sharp3D.Math.Core.Vector4D,System.Double,Sharp3D.Math.Core.Vector4D@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.DotProduct(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Negate(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.ApproxEqual(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.ApproxEqual(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.ClampZero(System.Double)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonD"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector4D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Equality(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Inequality(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_GreaterThan(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_LessThan(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_LessThanOrEqual(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_UnaryNegation(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Addition(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Addition(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Addition(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Subtraction(Sharp3D.Math.Core.Vector4D,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Subtraction(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Subtraction(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Multiply(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Multiply(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Division(Sharp3D.Math.Core.Vector4D,System.Double)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Division(System.Double,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4D"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Explicit(Sharp3D.Math.Core.Vector4D)~System.Double[]">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4D.op_Explicit(Sharp3D.Math.Core.Vector4D)~Sharp3D.Math.Core.DoubleArrayList">
            <summary>
            Converts the vector to an array of double-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4D"/> instance.</param>
            <returns>An array of double-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4D.X">
            <summary>
            Gets or sets the x-coordinate of this vector.
            </summary>
            <value>The x-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4D.Y">
            <summary>
            Gets or sets the y-coordinate of this vector.
            </summary>
            <value>The y-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4D.Z">
            <summary>
            Gets or sets the z-coordinate of this vector.
            </summary>
            <value>The z-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4D.W">
            <summary>
            Gets or sets the w-coordinate of this vector.
            </summary>
            <value>The w-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4D.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4DConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector4D"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector4DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4F">
            <summary>
            Represents 4-Dimentional vector of single-precision floating point numbers.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4F"/> class with the specified coordinates.
            </summary>
            <param name="x">The vector's X coordinate.</param>
            <param name="y">The vector's Y coordinate.</param>
            <param name="z">The vector's Z coordinate.</param>
            <param name="w">The vector's W coordinate.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.#ctor(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4F"/> class with the specified coordinates.
            </summary>
            <param name="coordinates">An array containing the coordinate parameters.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.#ctor(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4F"/> class using coordinates from a given <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.
            </summary>
            <param name="vector">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> to get the coordinates from.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4F.Zero">
            <summary>
            4-Dimentional single-precision floating point zero vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4F.XAxis">
            <summary>
            4-Dimentional single-precision floating point X-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4F.YAxis">
            <summary>
            4-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4F.ZAxis">
            <summary>
            4-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Core.Vector4F.WAxis">
            <summary>
            4-Dimentional single-precision floating point Y-Axis vector.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector4F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Core.Vector4F"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Core.Vector4F"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Core.Vector4F"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Vector4F"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Add(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Add(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Add(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Adds two vectors and put the result in the third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Add(Sharp3D.Math.Core.Vector4F,System.Single,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Adds a vector and a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Subtracts a vector from a second vector and puts the result into a third vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            w[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(Sharp3D.Math.Core.Vector4F,System.Single,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Subtracts a vector from a scalar and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Subtract(System.Single,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Subtracts a scalar from a vector and put the result into another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s - u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the quotient.</returns>
            <remarks>
            result[i] = u[i] / v[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Divides a vector by another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="w">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            w[i] = u[i] / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(Sharp3D.Math.Core.Vector4F,System.Single,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            v[i] = u[i] / s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Divide(System.Single,Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
            <remarks>
            v[i] = s / u[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Multiply(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Multiply(Sharp3D.Math.Core.Vector4F,System.Single,Sharp3D.Math.Core.Vector4F@)">
            <summary>
            Multiplies a vector by a scalar and put the result in another vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance to hold the result.</param>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.DotProduct(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>The dot product value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Negate(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Negates a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.ApproxEqual(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests whether two vectors are approximately equal using default tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.ApproxEqual(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Tests whether two vectors are approximately equal given a tolerance value.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="tolerance">The tolerance value used to test approximate equality.</param>
            <returns><see langword="true"/> if the two vectors are approximately equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Normalize">
            <summary>
            Scale the vector so that its length is 1.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.GetLength">
            <summary>
            Returns the length of the vector.
            </summary>
            <returns>The length of the vector. (Sqrt(X*X + Y*Y))</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.GetLengthSquared">
            <summary>
            Returns the squared length of the vector.
            </summary>
            <returns>The squared length of the vector. (X*X + Y*Y)</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.ClampZero(System.Single)">
            <summary>
            Clamps vector values to zero using a given tolerance value.
            </summary>
            <param name="tolerance">The tolerance to use.</param>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.ClampZero">
            <summary>
            Clamps vector values to zero using the default tolerance value.
            </summary>
            <remarks>
            The vector values that are close to zero within the given tolerance are set to zero.
            The tolerance value used is <see cref="F:Sharp3D.Math.Core.MathFunctions.EpsilonF"/>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector4F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Equality(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests whether two specified vectors are equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Inequality(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests whether two specified vectors are not equal.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the two vectors are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_GreaterThan(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests if a vector's components are greater than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_LessThan(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests if a vector's components are smaller than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_GreaterThanOrEqual(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests if a vector's components are greater or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are greater or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_LessThanOrEqual(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Tests if a vector's components are smaller or equal than another vector's components.
            </summary>
            <param name="u">The left-hand vector.</param>
            <param name="v">The right-hand vector.</param>
            <returns><see langword="true"/> if the left-hand vector's components are smaller or equal than the right-hand vector's component; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_UnaryNegation(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Negates the values of the vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the negated values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Addition(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Addition(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Addition(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Adds a vector and a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the sum.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Subtraction(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="u">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - w[i].
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Subtraction(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Subtracts a vector from a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = v[i] - s
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Subtraction(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Subtracts a scalar from a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance containing the difference.</returns>
            <remarks>
            result[i] = s - v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Multiply(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Multiply(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar.</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the result.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Division(Sharp3D.Math.Core.Vector4F,System.Single)">
            <summary>
            Divides a vector by a scalar.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the quotient.</returns>
            <remarks>
            result[i] = v[i] / s;
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Division(System.Single,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Divides a scalar by a vector.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <param name="s">A scalar</param>
            <returns>A new <see cref="T:Sharp3D.Math.Core.Vector4F"/> containing the quotient.</returns>
            <remarks>
            result[i] = s / v[i]
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Explicit(Sharp3D.Math.Core.Vector4F)~System.Single[]">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4F.op_Explicit(Sharp3D.Math.Core.Vector4F)~Sharp3D.Math.Core.FloatArrayList">
            <summary>
            Converts the vector to an array of single-precision floating point values.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance.</param>
            <returns>An array of single-precision floating point values.</returns>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4F.X">
            <summary>
            Gets or sets the x-coordinate of this vector.
            </summary>
            <value>The x-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4F.Y">
            <summary>
            Gets or sets the y-coordinate of this vector.
            </summary>
            <value>The y-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4F.Z">
            <summary>
            Gets or sets the z-coordinate of this vector.
            </summary>
            <value>The z-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4F.W">
            <summary>
            Gets or sets the w-coordinate of this vector.
            </summary>
            <value>The w-coordinate of this vector.</value>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4F.Item(System.Int32)">
            <summary>
            Indexer ( [x, y] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4FConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Core.Vector4F"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Sharp3D.Math.Core.Vector4FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"/> should be called to find a common set of values the object supports; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be a null reference.</param>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or a null reference (Nothing in Visual Basic) if the data type does not support a standard set of values.</returns>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2DCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </summary>
            <remarks>
            <b>IVector2DCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DCollection.CopyTo(Sharp3D.Math.Core.Vector2D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector2DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector2DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector2DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2DList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector2DList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.Add(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector2D"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.Contains(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector2D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector2DList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.IndexOf(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> in the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.Insert(System.Int32,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector2D"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector2DList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector2DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.Remove(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector2DList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector2DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector2DList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector2DList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector2D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector2D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector2DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector2DList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2DEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </summary>
            <remarks>
            <b>IVector2DEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2DEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2DEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector2D"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector2D"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector2DEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector2DEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2DArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </summary>
            <remarks><para>
            <b>Vector2DArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.#ctor(Sharp3D.Math.Core.Vector2DArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.#ctor(Sharp3D.Math.Core.Vector2D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Add(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector2D"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.AddRange(Sharp3D.Math.Core.Vector2DArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.AddRange(Sharp3D.Math.Core.Vector2D[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector2D"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.BinarySearch(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Contains(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector2D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.CopyTo(Sharp3D.Math.Core.Vector2D[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.CopyTo(Sharp3D.Math.Core.Vector2D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector2D"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector2DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector2DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.IndexOf(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector2D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector2D"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.ReadOnly(Sharp3D.Math.Core.Vector2DArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Remove(Sharp3D.Math.Core.Vector2D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Synchronized(Sharp3D.Math.Core.Vector2DArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2D"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2DArrayList.Unique(Sharp3D.Math.Core.Vector2DArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector2DArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector2DArrayList.Unique(Sharp3D.Math.Core.Vector2DArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector2DArrayList.Unique(Sharp3D.Math.Core.Vector2DArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector2D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector2D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector2D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector2DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2D"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector2DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector2DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2DArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector2DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2FCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </summary>
            <remarks>
            <b>IVector2FCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FCollection.CopyTo(Sharp3D.Math.Core.Vector2F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector2FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector2FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector2FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2FList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector2FList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.Add(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector2F"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.Contains(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector2F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector2FList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.IndexOf(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> in the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.Insert(System.Int32,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector2F"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector2FList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector2FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.Remove(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector2FList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector2FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector2FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector2FList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector2FList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector2F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector2F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector2FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector2FList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector2FEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </summary>
            <remarks>
            <b>IVector2FEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector2FEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector2FEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector2F"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector2F"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector2FEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector2FEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector2FArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </summary>
            <remarks><para>
            <b>Vector2FArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.#ctor(Sharp3D.Math.Core.Vector2FArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.#ctor(Sharp3D.Math.Core.Vector2F[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Add(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector2F"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.AddRange(Sharp3D.Math.Core.Vector2FArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.AddRange(Sharp3D.Math.Core.Vector2F[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector2F"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.BinarySearch(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Contains(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector2F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.CopyTo(Sharp3D.Math.Core.Vector2F[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.CopyTo(Sharp3D.Math.Core.Vector2F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector2F"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector2FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector2FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.IndexOf(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector2F"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.ReadOnly(Sharp3D.Math.Core.Vector2FArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Remove(Sharp3D.Math.Core.Vector2F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector2F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Synchronized(Sharp3D.Math.Core.Vector2FArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector2F"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector2FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector2FArrayList.Unique(Sharp3D.Math.Core.Vector2FArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector2FArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector2FArrayList.Unique(Sharp3D.Math.Core.Vector2FArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector2FArrayList.Unique(Sharp3D.Math.Core.Vector2FArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector2F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector2F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector2F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector2FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector2FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector2F"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector2FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector2FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector2FArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3DCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </summary>
            <remarks>
            <b>IVector3DCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DCollection.CopyTo(Sharp3D.Math.Core.Vector3D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector3DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector3DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector3DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3DList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector3DList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.Add(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector3D"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.Contains(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector3D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector3DList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.IndexOf(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> in the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.Insert(System.Int32,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector3D"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector3DList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector3DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.Remove(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector3DList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector3DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector3DList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector3DList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector3D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector3D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector3DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector3DList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3DEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </summary>
            <remarks>
            <b>IVector3DEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3DEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3DEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector3D"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector3D"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector3DEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector3DEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3DArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </summary>
            <remarks><para>
            <b>Vector3DArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.#ctor(Sharp3D.Math.Core.Vector3DArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.#ctor(Sharp3D.Math.Core.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Add(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector3D"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.AddRange(Sharp3D.Math.Core.Vector3DArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.AddRange(Sharp3D.Math.Core.Vector3D[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector3D"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.BinarySearch(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Contains(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector3D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.CopyTo(Sharp3D.Math.Core.Vector3D[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.CopyTo(Sharp3D.Math.Core.Vector3D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector3D"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector3DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector3DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.IndexOf(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector3D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector3D"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.ReadOnly(Sharp3D.Math.Core.Vector3DArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Remove(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Synchronized(Sharp3D.Math.Core.Vector3DArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3D"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3DArrayList.Unique(Sharp3D.Math.Core.Vector3DArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector3DArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector3DArrayList.Unique(Sharp3D.Math.Core.Vector3DArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector3DArrayList.Unique(Sharp3D.Math.Core.Vector3DArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector3D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector3D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector3D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector3DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3D"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector3DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector3DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3DArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector3DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3FCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </summary>
            <remarks>
            <b>IVector3FCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FCollection.CopyTo(Sharp3D.Math.Core.Vector3F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector3FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector3FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector3FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3FList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector3FList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.Add(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector3F"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.Contains(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector3F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector3FList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.IndexOf(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> in the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.Insert(System.Int32,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector3F"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector3FList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector3FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.Remove(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector3FList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector3FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector3FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector3FList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector3FList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector3F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector3F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector3FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector3FList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector3FEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </summary>
            <remarks>
            <b>IVector3FEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector3FEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector3FEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector3F"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector3F"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector3FEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector3FEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector3FArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </summary>
            <remarks><para>
            <b>Vector3FArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.#ctor(Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.#ctor(Sharp3D.Math.Core.Vector3F[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Add(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector3F"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.AddRange(Sharp3D.Math.Core.Vector3FArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.AddRange(Sharp3D.Math.Core.Vector3F[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector3F"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.BinarySearch(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Contains(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector3F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.CopyTo(Sharp3D.Math.Core.Vector3F[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.CopyTo(Sharp3D.Math.Core.Vector3F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector3F"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector3FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector3FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.IndexOf(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector3F"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.ReadOnly(Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Remove(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector3F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Synchronized(Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector3F"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector3FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector3FArrayList.Unique(Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector3FArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector3FArrayList.Unique(Sharp3D.Math.Core.Vector3FArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector3FArrayList.Unique(Sharp3D.Math.Core.Vector3FArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector3F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector3F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector3F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector3FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector3FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector3F"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector3FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector3FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector3FArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4DCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </summary>
            <remarks>
            <b>IVector4DCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DCollection.CopyTo(Sharp3D.Math.Core.Vector4D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector4DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector4DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector4DCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4DList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector4DList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.Add(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector4D"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.Contains(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector4D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector4DList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.IndexOf(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> in the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.Insert(System.Int32,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector4D"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector4DList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector4DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.Remove(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector4DList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector4DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4DList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector4DList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector4DList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector4D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector4D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector4DCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector4DList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4DEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </summary>
            <remarks>
            <b>IVector4DEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4DEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4DEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector4D"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector4D"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector4DEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector4DEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4DArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </summary>
            <remarks><para>
            <b>Vector4DArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.#ctor(Sharp3D.Math.Core.Vector4DArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.#ctor(Sharp3D.Math.Core.Vector4D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Add(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector4D"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.AddRange(Sharp3D.Math.Core.Vector4DArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.AddRange(Sharp3D.Math.Core.Vector4D[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector4D"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.BinarySearch(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Contains(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector4D"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.CopyTo(Sharp3D.Math.Core.Vector4D[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.CopyTo(Sharp3D.Math.Core.Vector4D[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector4D"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector4DEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector4DEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.IndexOf(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector4D)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector4D"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.ReadOnly(Sharp3D.Math.Core.Vector4DArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Remove(Sharp3D.Math.Core.Vector4D)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4D"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Synchronized(Sharp3D.Math.Core.Vector4DArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4D"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4DArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4DArrayList.Unique(Sharp3D.Math.Core.Vector4DArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector4DArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector4DArrayList.Unique(Sharp3D.Math.Core.Vector4DArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector4DArrayList.Unique(Sharp3D.Math.Core.Vector4DArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector4D"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector4D"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector4D"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector4DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4DArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4D"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector4DArrayList</b> already contains the
            specified element at a different index, and the <b>Vector4DArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4DArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector4DArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4FCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </summary>
            <remarks>
            <b>IVector4FCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FCollection.CopyTo(Sharp3D.Math.Core.Vector4F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector4FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector4FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:Sharp3D.Math.Core.IVector4FCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4FList">
            <summary>
            Represents a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IVector4FList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.Add(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector4F"/> to the end
            of the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.Contains(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector4F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.IVector4FList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.IndexOf(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> in the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.Insert(System.Int32,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector4F"/> element into the
            <see cref="T:Sharp3D.Math.Core.IVector4FList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:Sharp3D.Math.Core.IVector4FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.Remove(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            from the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:Sharp3D.Math.Core.IVector4FList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector4FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IVector4FList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector4FList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector4FList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector4F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector4F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:Sharp3D.Math.Core.IVector4FCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:Sharp3D.Math.Core.IVector4FList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.IVector4FEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </summary>
            <remarks>
            <b>IVector4FEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.IVector4FEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.IVector4FEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Sharp3D.Math.Core.Vector4F"/> element in the collection.
            </summary>
            <value>The current <see cref="T:Sharp3D.Math.Core.Vector4F"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:Sharp3D.Math.Core.IVector4FEnumerator.MoveNext"/> or <see cref="M:Sharp3D.Math.Core.IVector4FEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Core.Vector4FArrayList">
            <summary>
            Implements a strongly typed collection of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </summary>
            <remarks><para>
            <b>Vector4FArrayList</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </para></remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.#ctor(Sharp3D.Math.Core.Vector4FArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.#ctor(Sharp3D.Math.Core.Vector4F[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> class
            that contains elements copied from the specified <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Add(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Adds a <see cref="T:Sharp3D.Math.Core.Vector4F"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </param>
            <returns>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.AddRange(Sharp3D.Math.Core.Vector4FArrayList)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains one or more elements
            in the specified <paramref name="collection"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.AddRange(Sharp3D.Math.Core.Vector4F[])">
            <summary>
            Adds the elements of a <see cref="T:Sharp3D.Math.Core.Vector4F"/> array
            to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements
            that should be added to the end of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains one or more elements
            in the specified <paramref name="array"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.BinarySearch(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Searches the entire sorted <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> for an
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Clear">
            <summary>
            Removes all elements from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Contains(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            contains the specified <see cref="T:Sharp3D.Math.Core.Vector4F"/> element.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.CopyTo(Sharp3D.Math.Core.Vector4F[])">
            <overloads>
            Copies the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.CopyTo(Sharp3D.Math.Core.Vector4F[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements copied from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:Sharp3D.Math.Core.Vector4F"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.GetEnumerator">
            <summary>
            Returns an <see cref="T:Sharp3D.Math.Core.IVector4FEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <returns>An <see cref="T:Sharp3D.Math.Core.IVector4FEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.IndexOf(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to locate in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Insert(System.Int32,Sharp3D.Math.Core.Vector4F)">
            <summary>
            Inserts a <see cref="T:Sharp3D.Math.Core.Vector4F"/> element into the
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to insert into the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> already contains the specified
            <paramref name="value"/>, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.ReadOnly(Sharp3D.Math.Core.Vector4FArrayList)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Remove(Sharp3D.Math.Core.Vector4F)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:Sharp3D.Math.Core.Vector4F"/> object
            to remove from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            This argument must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Synchronized(Sharp3D.Math.Core.Vector4FArrayList)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:Sharp3D.Math.Core.Vector4F"/>
            elements containing copies of the elements of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>Vector4FArrayList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Core.Vector4FArrayList.Unique(Sharp3D.Math.Core.Vector4FArrayList)">
            <summary>
            Returns a wrapper for the specified <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            ensuring that all elements are unique.
            </summary>
            <param name="collection">The <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> to wrap.</param>    
            <returns>
            A wrapper around <paramref name="collection"/> ensuring that all elements are unique.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="collection"/> contains duplicate elements.</exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks><para>
            The <b>Unique</b> wrapper provides a set-like collection by ensuring
            that all elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> are unique.
            </para><para>
            <b>Unique</b> raises an <see cref="T:System.ArgumentException"/> if the specified 
            <paramref name="collection"/> contains any duplicate elements. The returned
            wrapper raises a <see cref="T:System.NotSupportedException"/> whenever the user attempts 
            to add an element that is already contained in the <b>Vector4FArrayList</b>.
            </para><para>
            <strong>Note:</strong> The <b>Unique</b> wrapper reflects any changes made
            to the underlying <paramref name="collection"/>, including the possible
            creation of duplicate elements. The uniqueness of all elements is therefore
            no longer assured if the underlying collection is manipulated directly.
            </para></remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> elements in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.IsUnique">
            <summary>
            Gets a value indicating whether the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> 
            ensures that all elements are unique.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> ensures that all 
            elements are unique; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            <b>IsUnique</b> returns <c>true</c> exactly if the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>
            is exposed through a <see cref="M:Sharp3D.Math.Core.Vector4FArrayList.Unique(Sharp3D.Math.Core.Vector4FArrayList)"/> wrapper. 
            Please refer to <see cref="M:Sharp3D.Math.Core.Vector4FArrayList.Unique(Sharp3D.Math.Core.Vector4FArrayList)"/> for details.
            </remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sharp3D.Math.Core.Vector4F"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Sharp3D.Math.Core.Vector4F"/> element to get or set.</param>
            <value>
            The <see cref="T:Sharp3D.Math.Core.Vector4F"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector4FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:Sharp3D.Math.Core.Vector4FArrayList.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:Sharp3D.Math.Core.Vector4F"/>.</exception>
            <exception cref="T:System.NotSupportedException"><para>
            The property is set and the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/> is read-only.
            </para><para>-or-</para><para>
            The property is set, the <b>Vector4FArrayList</b> already contains the
            specified element at a different index, and the <b>Vector4FArrayList</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Sharp3D.Math.Core.Vector4FArrayList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:Sharp3D.Math.Core.Vector4FArrayList"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.AxisAlignedBox">
            <summary>
            Represents an axis aligned box in 2D space.
            </summary>
            <remarks>
            An axis-aligned box is a box whose faces coincide with the standard basis axes.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.#ctor(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> class using given minimum and maximum points.
            </summary>
            <param name="min">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance representing the minimum point.</param>
            <param name="max">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance representing the maximum point.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.#ctor(Sharp3D.Math.Geometry2D.AxisAlignedBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> class using given values from another box instance.
            </summary>
            <param name="box">A <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.ComputeVertices">
            <summary>
            Computes the box vertices. 
            </summary>
            <returns>An array of <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the box vertices.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.op_Equality(Sharp3D.Math.Geometry2D.AxisAlignedBox,Sharp3D.Math.Geometry2D.AxisAlignedBox)">
            <summary>
            Checks if the two given boxes are equal.
            </summary>
            <param name="a">The first of two boxes to compare.</param>
            <param name="b">The second of two boxes to compare.</param>
            <returns><b>true</b> if the boxes are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBox.op_Inequality(Sharp3D.Math.Geometry2D.AxisAlignedBox,Sharp3D.Math.Geometry2D.AxisAlignedBox)">
            <summary>
            Checks if the two given boxes are not equal.
            </summary>
            <param name="a">The first of two boxes to compare.</param>
            <param name="b">The second of two boxes to compare.</param>
            <returns><b>true</b> if the vectors are not equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.AxisAlignedBox.Min">
            <summary>
            Gets or sets the minimum point which is the box's minimum X and Y coordinates.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.AxisAlignedBox.Max">
            <summary>
            Gets or sets the maximum point which is the box's maximum X and Y coordinates.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.AxisAlignedBoxConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBoxConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBoxConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBoxConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.AxisAlignedBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.Circle">
            <summary>
            Represents a circle in 2D space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.#ctor(Sharp3D.Math.Core.Vector2F,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> class using center and radius values.
            </summary>
            <param name="center">The circle's center point.</param>
            <param name="radius">The circle's radius.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.#ctor(Sharp3D.Math.Geometry2D.Circle)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> class using values from another circle instance.
            </summary>
            <param name="circle">A <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector2F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Geometry2D.Circle.UnitCircle">
            <summary>
            Unit sphere.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry2D.Circle"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.GetHashCode">
            <summary>
            Get the hashcode for this vector instance.
            </summary>
            <returns>Returns the hash code for this vector instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.Equals(System.Object)">
            <summary>
            Checks if a given <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> equals to self.
            </summary>
            <param name="o">Object to check if equal to.</param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.ToString">
            <summary>
            Convert <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> to a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.op_Equality(Sharp3D.Math.Geometry2D.Circle,Sharp3D.Math.Geometry2D.Circle)">
            <summary>
            Checks if the two given circles are equal.
            </summary>
            <param name="a">The first of two 2D circles to compare.</param>
            <param name="b">The second of two 2D circles to compare.</param>
            <returns><b>true</b> if the circles are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.op_Inequality(Sharp3D.Math.Geometry2D.Circle,Sharp3D.Math.Geometry2D.Circle)">
            <summary>
            Checks if the two given circles are not equal.
            </summary>
            <param name="a">The first of two 2D circles to compare.</param>
            <param name="b">The second of two 2D circles to compare.</param>
            <returns><b>true</b> if the circles are not equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.TestIntersection(Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Tests if a ray intersects the sphere.
            </summary>
            <param name="ray">The ray to test.</param>
            <returns>Returns True if the ray intersects the sphere. otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Circle.FindIntersections(Sharp3D.Math.Geometry2D.Ray,System.Single@)">
            <summary>
            Find the intersection of a ray and a sphere.
            Only works with unit rays (normalized direction)!!!
            </summary>
            <remarks>
            This is the optimized Ray-Sphere intersection algorithms described in "Real-Time Rendering".
            </remarks>
            <param name="ray">The ray to test.</param>
            <param name="t">
            If intersection accurs, the function outputs the distance from the ray's origin 
            to the closest intersection point to this parameter.
            </param>
            <returns>Returns True if the ray intersects the sphere. otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Circle.Center">
            <summary>
            The circle's center.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Circle.Radius">
            <summary>
            The circle's radius.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.CircleConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry2D.Circle"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.CircleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.CircleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.CircleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.CircleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.DistanceMethods">
            <summary>
            Provides various distance computation methods.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the squared distance between two points.
            </summary>
            <param name="point1">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="point2">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>The squared distance between the two points.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Calculates the distance between two points.
            </summary>
            <param name="point1">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="point2">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <returns>The distance between the two points.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Calculates the squared distance between a given point and a given ray.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> instance.</param>
            <returns>The squared distance between the point and the ray.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Calculates the distance between a given point and a given ray.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> instance.</param>
            <returns>The distance between the point and the ray.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.AxisAlignedBox)">
            <summary>
            Calculates the squared distance between a point and a solid axis-aligned box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="aabb">An <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> instance.</param>
            <returns>The squared distance between a point and a solid axis-aligned box.</returns>
            <remarks>
            Treating the box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.AxisAlignedBox)">
            <summary>
            Calculates the distance between a point and a solid axis-aligned box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="aabb">An <see cref="T:Sharp3D.Math.Geometry2D.AxisAlignedBox"/> instance.</param>
            <returns>The distance between a point and a solid axis-aligned box.</returns>
            <remarks>
            Treating the box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.SquaredDistancePointSolidOrientedBox(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.OrientedBox,Sharp3D.Math.Core.Vector2F@)">
            <summary>
            Calculates the squared distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> instance.</param>
            <param name="closestPoint">The closest point in box coordinates.</param>
            <returns>The squared distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.OrientedBox)">
            <summary>
            Calculates the squared distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> instance.</param>
            <returns>The squared distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Geometry2D.OrientedBox)">
            <summary>
            Calculates the distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector2F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> instance.</param>
            <returns>The distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.OrientedBox">
            <summary>
            Represents an oriented box in 2D space.
            </summary>
            <remarks>
            An oriented box is a box whose faces have normals that are all pairwise orthogonal-i.e., it is an axis aligned box arbitrarily rotated.
            A 2D oriented box is defined by a center point, two orthonormal axes that describe the side
            directions of the box, and their respective positive half-lengths extents.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.#ctor(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> class using given center point, axes and extents.
            </summary>
            <param name="center">The center of the box.</param>
            <param name="axis1">The first axis.</param>
            <param name="axis2">The second axis.</param>
            <param name="extent1">The extent on the first axis.</param>
            <param name="extent2">The extent on the second axis.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.#ctor(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F[],System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> class using given center point, axes and extents.
            </summary>
            <param name="center">The center of the box.</param>
            <param name="axes">The axes of the box.</param>
            <param name="extents">The extent values of the box..</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.#ctor(Sharp3D.Math.Geometry2D.OrientedBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> class using given values from another box instance.
            </summary>
            <param name="box">A <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.ComputeVertices">
            <summary>
            Computes the box vertices. 
            </summary>
            <returns>An array of <see cref="T:Sharp3D.Math.Core.Vector2F"/> containing the box vertices.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.op_Equality(Sharp3D.Math.Geometry2D.OrientedBox,Sharp3D.Math.Geometry2D.OrientedBox)">
            <summary>
            Tests whether two specified boxes are equal.
            </summary>
            <param name="a">The left-hand box.</param>
            <param name="b">The right-hand box.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBox.op_Inequality(Sharp3D.Math.Geometry2D.OrientedBox,Sharp3D.Math.Geometry2D.OrientedBox)">
            <summary>
            Tests whether two specified boxes are not equal.
            </summary>
            <param name="a">The left-hand box.</param>
            <param name="b">The right-hand box.</param>
            <returns><see langword="true"/> if the two boxes are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.OrientedBox.Center">
            <summary>
            Gets or sets the box's center point.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.OrientedBox.Axis1">
            <summary>
            Gets or sets the box's first axis.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.OrientedBox.Axis2">
            <summary>
            Gets or sets the box's second axis.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.OrientedBox.Extent1">
            <summary>
            Gets or sets the box's first extent.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.OrientedBox.Extent2">
            <summary>
            Gets or sets the box's second extent.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.OrientedBoxConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry2D.OrientedBox"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBoxConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBoxConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBoxConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.OrientedBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.Polygon">
            <summary>
            Represents a polygon in 2 dimentional space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.#ctor(Sharp3D.Math.Core.Vector2FArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> class using an array of coordinates.
            </summary>
            <param name="points">An <see cref="T:Sharp3D.Math.Core.Vector2FArrayList"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.#ctor(Sharp3D.Math.Core.Vector2F[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> class using an array of coordinates.
            </summary>
            <param name="points">An array of <see cref="T:Sharp3D.Math.Core.Vector2F"/> coordniates.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.#ctor(Sharp3D.Math.Geometry2D.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> class using coordinates from another instance.
            </summary>
            <param name="polygon">A <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.Polygon"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Polygon.Flip">
            <summary>
            Flips the polygon.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Polygon.Points">
            <summary>
            Gets the polygon's list of points.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Polygon.VertexCount">
            <summary>
            Gets the polygon's vertex count.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.Ray">
            <summary>
            Represents a ray in 2D space.
            </summary>
            <remarks>
            A ray is R(t) = Origin + t * Direction where Direction isnt necessarily of unit length.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.#ctor(Sharp3D.Math.Core.Vector2F,Sharp3D.Math.Core.Vector2F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> class using given origin and direction vectors.
            </summary>
            <param name="origin">Ray's origin point.</param>
            <param name="direction">Ray's direction vector.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.#ctor(Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> class using given ray.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> instance to assign values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry2D.Ray"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.GetPointOnRay(System.Single)">
            <summary>
            Gets a point on the ray.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.GetHashCode">
            <summary>
            Get the hashcode for this vector instance.
            </summary>
            <returns>Returns the hash code for this vector instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.op_Equality(Sharp3D.Math.Geometry2D.Ray,Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Tests whether two specified rays are equal.
            </summary>
            <param name="a">The first of two rays to compare.</param>
            <param name="b">The second of two rays to compare.</param>
            <returns><see langword="true"/> if the two rays are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.Ray.op_Inequality(Sharp3D.Math.Geometry2D.Ray,Sharp3D.Math.Geometry2D.Ray)">
            <summary>
            Tests whether two specified rays are not equal.
            </summary>
            <param name="a">The first of two rays to compare.</param>
            <param name="b">The second of two rays to compare.</param>
            <returns><see langword="true"/> if the two rays are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Ray.Origin">
            <summary>
            Gets or sets the ray's origin.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry2D.Ray.Direction">
            <summary>
            Gets or sets the ray's direction vector.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry2D.RayConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry2D.Ray"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.RayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.RayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.RayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry2D.RayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.AxisAlignedBox">
            <summary>
            Represents an axis aligned box in 3D space.
            </summary>
            <remarks>
            An axis-aligned box is a box whose faces coincide with the standard basis axes.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> class using given minimum and maximum points.
            </summary>
            <param name="min">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance representing the minimum point.</param>
            <param name="max">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance representing the maximum point.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.#ctor(Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> class using given values from another box instance.
            </summary>
            <param name="box">A <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.ComputeVertices">
            <summary>
            Computes the box vertices. 
            </summary>
            <returns>An array of <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the box vertices.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.op_Equality(Sharp3D.Math.Geometry3D.AxisAlignedBox,Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Checks if the two given boxes are equal.
            </summary>
            <param name="a">The first of two boxes to compare.</param>
            <param name="b">The second of two boxes to compare.</param>
            <returns><b>true</b> if the boxes are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBox.op_Inequality(Sharp3D.Math.Geometry3D.AxisAlignedBox,Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Checks if the two given boxes are not equal.
            </summary>
            <param name="a">The first of two boxes to compare.</param>
            <param name="b">The second of two boxes to compare.</param>
            <returns><b>true</b> if the vectors are not equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.AxisAlignedBox.Min">
            <summary>
            Gets or sets the minimum point which is the box's minimum X and Y coordinates.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.AxisAlignedBox.Max">
            <summary>
            Gets or sets the maximum point which is the box's maximum X and Y coordinates.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.AxisAlignedBoxConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBoxConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBoxConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBoxConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.AxisAlignedBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.DistanceMethods">
            <summary>
            Provides various distance computation methods.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the squared distance between two points.
            </summary>
            <param name="point1">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="point2">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>The squared distance between between two points.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Calculates the distance between two points.
            </summary>
            <param name="point1">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="point2">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <returns>The distance between between two points.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.SquaredDistancePointSolidOrientedBox(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Geometry3D.OrientedBox,Sharp3D.Math.Core.Vector3F@)">
            <summary>
            Calculates the squared distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <param name="closestPoint">The closest point in box coordinates.</param>
            <returns>The squared distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.SquaredDistance(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Calculates the squared distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>The squared distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Calculates the distance between a point and a solid oriented box.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="obb">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>The distance between a point and a solid oriented box.</returns>
            <remarks>
            Treating the oriented box as solid means that any point inside the box has
            distance zero from the box.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.DistanceMethods.Distance(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Calculates the distance between a point and a plane.
            </summary>
            <param name="point">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="plane">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns>The distance between a point and a plane.</returns>
            <remarks>
            <p>
             A positive return value means teh point is on the positive side of the plane.
             A negative return value means teh point is on the negative side of the plane.
             A zero return value means the point is on the plane.
            </p>
            <p>
             The absolute value of the return value is the true distance only when the plane normal is
             a unit length vector. 
            </p>
            </remarks>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.IntersectionPair">
            <summary>
            Stores an intersection result pair (if intersection occurred and where).
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionPair.#ctor(System.Boolean,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initialize a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> class.
            </summary>
            <param name="intersectionOccurred">A boolean value.</param>
            <param name="intersectionPoint">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.IntersectionPair.IntersectionOccurred">
            <summary>
            Gets a value indicating if an intersection ahs occurred.
            </summary>
            <value>A boolean value.</value>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.IntersectionPair.IntersectionPoint">
            <summary>
            Gets the intersection point if intersection has occurred.
            </summary>
            <value>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</value>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.IntersectionType">
            <summary>
            Represents the possible interction types.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.IntersectionType.None">
            <summary>
            Objects do not intersect
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.IntersectionType.Partial">
            <summary>
            Objects parially intersect each other.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.IntersectionType.Contained">
            <summary>
            An object is fully contained in another object.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.IntersectionMethods">
            <summary>
            Provides method for testing intersections between objects.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> and a <see cref="T:Sharp3D.Math.Geometry3D.Plane"/>.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance.</param>
            <param name="plane">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> and an <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox">axis aligned box</see>.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance.</param>
            <param name="aabb">A <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> and an <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox">oriented box</see>.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance.</param>
            <param name="obb">A <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.Sphere)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> and a <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/>.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance.</param>
            <param name="sphere">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.Triangle)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> and a <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/>.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance.</param>
            <param name="triangle">A <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
            <remarks>
            For information about the algorithm visit http://www.acm.org/jgt/papers/MollerTrumbore97/ 
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Segment,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> and a <see cref="T:Sharp3D.Math.Geometry3D.Plane"/>
            </summary>
            <param name="line">A <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> instance.</param>
            <param name="plane">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionPair"/> instance containing the intersection information.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.AxisAlignedBox,Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Tests for intersection between two <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instances.
            </summary>
            <param name="box1">An <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance.</param>
            <param name="box2">An <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.AxisAlignedBox,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests for intersection between an <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> and an <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> .
            </summary>
            <param name="box1">An <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance.</param>
            <param name="box2">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.OrientedBox,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests for intersection between two <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instances.
            </summary>
            <param name="box1">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <param name="box2">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Sphere,Sharp3D.Math.Geometry3D.Sphere)">
            <summary>
            Tests for intersection between two <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instances.
            </summary>
            <param name="sphere1">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance.</param>
            <param name="sphere2">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Sphere,Sharp3D.Math.Geometry3D.AxisAlignedBox)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> and an <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> .
            </summary>
            <param name="sphere">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance.</param>
            <param name="box">An <see cref="T:Sharp3D.Math.Geometry3D.AxisAlignedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.Intersects(Sharp3D.Math.Geometry3D.Sphere,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> and an <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> .
            </summary>
            <param name="sphere">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance.</param>
            <param name="box">An <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance.</param>
            <returns>An <see cref="T:Sharp3D.Math.Geometry3D.IntersectionType"/> value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.IntersectionMethods.TestIntersection(Sharp3D.Math.Geometry3D.Segment,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Tests for intersection between a <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> and a <see cref="T:Sharp3D.Math.Geometry3D.Plane"/>.
            </summary>
            <param name="line">A <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> instance.</param>
            <param name="plane">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns><see langword="true"/> if intersection occurs; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.OrientedBox">
            <summary>
            Represents an oriented box in 3D space.
            </summary>
            <remarks>
            An oriented box is a box whose faces have normals that are all pairwise orthogonal-i.e., it is an axis aligned box arbitrarily rotated.
            A 3D oriented box is defined by a center point, two orthonormal axes that describe the side
            directions of the box, and their respective positive half-lengths extents.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> class using given center point, axes and extents.
            </summary>
            <param name="center">The center of the box.</param>
            <param name="axis1">The first axis.</param>
            <param name="axis2">The second axis.</param>
            <param name="axis3">The third axis.</param>
            <param name="extent1">The extent on the first axis.</param>
            <param name="extent2">The extent on the second axis.</param>
            <param name="extent3">The extent of the third axis.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F[],System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> class using given center point, axes and extents.
            </summary>
            <param name="center">The center of the box..</param>
            <param name="axes">The axes of the box.</param>
            <param name="extents">The extent values of the box..</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.#ctor(Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> class using given values from another box instance.
            </summary>
            <param name="box">A <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.ComputeVertices">
            <summary>
            Computes the box vertices. 
            </summary>
            <returns>An array of <see cref="T:Sharp3D.Math.Core.Vector3F"/> containing the box vertices.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.op_Equality(Sharp3D.Math.Geometry3D.OrientedBox,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests whether two specified boxes are equal.
            </summary>
            <param name="a">The left-hand box.</param>
            <param name="b">The right-hand box.</param>
            <returns><see langword="true"/> if the two vectors are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBox.op_Inequality(Sharp3D.Math.Geometry3D.OrientedBox,Sharp3D.Math.Geometry3D.OrientedBox)">
            <summary>
            Tests whether two specified boxes are not equal.
            </summary>
            <param name="a">The left-hand box.</param>
            <param name="b">The right-hand box.</param>
            <returns><see langword="true"/> if the two boxes are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Center">
            <summary>
            Gets or sets the box's center point.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Axis1">
            <summary>
            Gets or sets the box's first axis.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Axis2">
            <summary>
            Gets or sets the box's second axis.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Axis3">
            <summary>
            Gets or sets the box's third axis.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Extent1">
            <summary>
            Gets or sets the box's first extent.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Extent2">
            <summary>
            Gets or sets the box's second extent.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.OrientedBox.Extent3">
            <summary>
            Gets or sets the box's third extent.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.OrientedBoxConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.OrientedBox"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBoxConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBoxConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBoxConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.OrientedBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Plane">
            <summary>
            Represents a plane in 3D space.
            </summary>
            <remarks>
            The plane is described by a normal and a constant (N,D) which 
            denotes that the plane is consisting of points Q that
            satisfies (N dot Q)+D = 0.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.#ctor(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> class using given normal and constant values.
            </summary>
            <param name="normal">The plane's normal vector.</param>
            <param name="constant">The plane's constant value.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> class using given normal and a point.
            </summary>
            <param name="normal">The plane's normal vector.</param>
            <param name="point">A point on the plane in 3D space.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> class using 3 given points.
            </summary>
            <param name="p0">A point on the plane in 3D space.</param>
            <param name="p1">A point on the plane in 3D space.</param>
            <param name="p2">A point on the plane in 3D space.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.#ctor(Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> class using given a plane to assign values from.
            </summary>
            <param name="p">A 3D plane to assign values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.Plane.XPlane">
            <summary>
            Plane on the X axis.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.Plane.YPlane">
            <summary>
            Plane on the Y axis.
            </summary>
        </member>
        <member name="F:Sharp3D.Math.Geometry3D.Plane.ZPlane">
            <summary>
            Plane on the Z axis.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.Plane"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.Flip">
            <summary>
            Flip the plane.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.GetFlipped">
            <summary>
            Creates a new flipped plane (-normal, constant).
            </summary>
            <returns>A new <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.GetSign(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Returns the points's position relative to the plane itself (i.e Front/Back/On)
            </summary>
            <param name="p">A point in 3D space.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.GetSign(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Returns the points's position relative to the plane itself (i.e Front/Back/On)
            </summary>
            <param name="p">A point in 3D space.</param>
            <param name="tolerance">The tolerance value to use.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.MathFunctions.Sign"/>.</returns>
            <remarks>
            If the point's distance from the plane is withon the [-tolerance, tolerance] range, the point is considered to be on the plane.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.op_Equality(Sharp3D.Math.Geometry3D.Plane,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Tests whether two specified planes are equal.
            </summary>
            <param name="a">The left-hand plane.</param>
            <param name="b">The right-hand plane.</param>
            <returns><see langword="true"/> if the two planes are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Plane.op_Inequality(Sharp3D.Math.Geometry3D.Plane,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Tests whether two specified planes are not equal.
            </summary>
            <param name="a">The left-hand plane.</param>
            <param name="b">The right-hand plane.</param>
            <returns><see langword="true"/> if the two planes are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Plane.Normal">
            <summary>
            Gets or sets the plane's normal vector.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Plane.Constant">
            <summary>
            Gets or sets the plane's constant value.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.PlaneConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.PlaneConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.PlaneConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.PlaneConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.PlaneConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Polygon">
            <summary>
            Represents a polygon in 3 dimentional space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.#ctor(Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> class using an array of coordinates.
            </summary>
            <param name="points">An <see cref="T:Sharp3D.Math.Core.Vector3FArrayList"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.#ctor(Sharp3D.Math.Core.Vector3F[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> class using an array of coordinates.
            </summary>
            <param name="points">An array of <see cref="T:Sharp3D.Math.Core.Vector3F"/> coordniates.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.#ctor(Sharp3D.Math.Geometry3D.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> class using coordinates from another instance.
            </summary>
            <param name="polygon">A <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Polygon"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize this object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Polygon.Flip">
            <summary>
            Flips the polygon.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Polygon.Points">
            <summary>
            Gets the polygon's list of points.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Polygon.VertexCount">
            <summary>
            Gets the polygon's vertex count.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Ray">
            <summary>
            Represents a ray in 3D space.
            </summary>
            <remarks>
            A ray is R(t) = Origin + t * Direction where t>=0. The Direction isnt necessarily of unit length.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> class using given origin and direction vectors.
            </summary>
            <param name="origin">Ray's origin point.</param>
            <param name="direction">Ray's direction vector.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.#ctor(Sharp3D.Math.Geometry3D.Ray)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> class using given ray.
            </summary>
            <param name="ray">A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> instance to assign values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.GetPointOnRay(System.Single)">
            <summary>
            Gets a point on the ray.
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.GetHashCode">
            <summary>
            Get the hashcode for this vector instance.
            </summary>
            <returns>Returns the hash code for this vector instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.op_Equality(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.Ray)">
            <summary>
            Tests whether two specified rays are equal.
            </summary>
            <param name="a">The first of two rays to compare.</param>
            <param name="b">The second of two rays to compare.</param>
            <returns><see langword="true"/> if the two rays are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Ray.op_Inequality(Sharp3D.Math.Geometry3D.Ray,Sharp3D.Math.Geometry3D.Ray)">
            <summary>
            Tests whether two specified rays are not equal.
            </summary>
            <param name="a">The first of two rays to compare.</param>
            <param name="b">The second of two rays to compare.</param>
            <returns><see langword="true"/> if the two rays are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Ray.Origin">
            <summary>
            Gets or sets the ray's origin.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Ray.Direction">
            <summary>
            Gets or sets the ray's direction vector.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.RayConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.Ray"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.RayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.RayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.RayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.RayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Segment">
            <summary>
            Represents a segment in 3D space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> class.
            </summary>
            <param name="p0">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance marking the segment's starting point.</param>
            <param name="p1">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance marking the segment's ending point.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.#ctor(Sharp3D.Math.Geometry3D.Segment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> class using an existing <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> instance.
            </summary>
            <param name="l">A <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.Segment"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.GetHashCode">
            <summary>
            Get the hashcode for this vector instance.
            </summary>
            <returns>Returns the hash code for this vector instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.op_Equality(Sharp3D.Math.Geometry3D.Segment,Sharp3D.Math.Geometry3D.Segment)">
            <summary>
            Tests whether two specified lines are equal.
            </summary>
            <param name="a">The left-hand line.</param>
            <param name="b">The right-hand line.</param>
            <returns><see langword="true"/> if the two lines are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Segment.op_Inequality(Sharp3D.Math.Geometry3D.Segment,Sharp3D.Math.Geometry3D.Segment)">
            <summary>
            Tests whether two specified lines are not equal.
            </summary>
            <param name="a">The left-hand line.</param>
            <param name="b">The right-hand line.</param>
            <returns><see langword="true"/> if the two lines are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Segment.P0">
            <summary>
            Gets or sets the line's first point.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Segment.P1">
            <summary>
            Gets or sets the line's second point.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.SegmentConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.Segment"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SegmentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SegmentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SegmentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SegmentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Sphere">
            <summary>
            Represents a sphere in 3D space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.#ctor(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> class using center and radius values.
            </summary>
            <param name="center">The sphere center point.</param>
            <param name="radius">The sphere radius.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.#ctor(Sharp3D.Math.Geometry3D.Sphere)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> class using values from another sphere instance.
            </summary>
            <param name="sphere">A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> instance to take values from.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Core.Vector3F"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.GetHashCode">
            <summary>
            Returns the hashcode for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector2D"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.op_Equality(Sharp3D.Math.Geometry3D.Sphere,Sharp3D.Math.Geometry3D.Sphere)">
            <summary>
            Tests whether two specified spheres are equal.
            </summary>
            <param name="a">The left-hand sphere.</param>
            <param name="b">The right-hand sphere.</param>
            <returns><see langword="true"/> if the two spheres are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Sphere.op_Inequality(Sharp3D.Math.Geometry3D.Sphere,Sharp3D.Math.Geometry3D.Sphere)">
            <summary>
            Tests whether two specified spheres are not equal.
            </summary>
            <param name="a">The left-hand sphere.</param>
            <param name="b">The right-hand sphere.</param>
            <returns><see langword="true"/> if the two spheres are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Sphere.Center">
            <summary>
            Gets or sets the sphere's center.
            </summary>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Sphere.Radius">
            <summary>
            Gets or sets the sphere's radius.
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.SphereConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.Sphere"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SphereConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SphereConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SphereConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.SphereConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.TransformationD">
            <summary>
            Contains utility functions to create double-precision transformations.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotationAxis(Sharp3D.Math.Core.Vector3D,System.Double)">
            <summary>
            Builds a matrix that rotates around an arbitrary axis.
            </summary>
            <param name="rotationAxis">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> instance specifying the axis to rotate around (vector has to be of unit length).</param>
            <param name="angle">
            Angle of rotation, in radians. Angles are measured clockwise when looking along the rotation axis from the origin.
            </param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotationQuaternion(Sharp3D.Math.Core.QuaternionD)">
            <summary>
            Builds a rotation matrix from a quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotationYawPitchRoll(System.Double,System.Double,System.Double)">
            <summary>
            Builds a matrix with a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
            <remarks>
            The order of transformations is first roll, then pitch, then yaw. 
            Relative to the object's local coordinate axis, this is equivalent to 
            rotation around the z-axis, followed by rotation around the x-axis, 
            followed by rotation around the y-axis. 
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotateX(System.Double)">
            <summary>
            Builds a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotateY(System.Double)">
            <summary>
            Builds a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.RotateZ(System.Double)">
            <summary>
            Builds a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.Scaling(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Builds a matrix that scales along the x-axis, y-axis, and z-axis.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> structure containing three values that represent the scaling factors applied along the x-axis, y-axis, and z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the scaling transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.Scaling(System.Double,System.Double,System.Double)">
            <summary>
            Builds a matrix that scales along the x-axis, y-axis, and z-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the scaling transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.Translation(System.Double,System.Double,System.Double)">
            <summary>
            Builds a translation matrix.
            </summary>
            <param name="x">Offset on the x-axis.</param>
            <param name="y">Offset on the y-axis.</param>
            <param name="z">Offset on the z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the translation transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.Translation(Sharp3D.Math.Core.Vector3D)">
            <summary>
            Builds a translation matrix.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3D"/> structure containing three values that represent the offsets on the x-axis, y-axis, and z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4D"/> representing the translation transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.TransformArray(Sharp3D.Math.Core.Vector4DArrayList,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Transform the vectors in the given array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <remarks>
            This method changes the vector values in the <paramref name="vectors"/> array.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.TransformArray(Sharp3D.Math.Core.Vector4DArrayList,Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector4DArrayList)">
            <summary>
            Transform the vectors in the given array and put the result in another array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <param name="result">An array of vectors to put the transformation results in (should be empty).</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.TransformArray(Sharp3D.Math.Core.Vector3DArrayList,Sharp3D.Math.Core.Matrix4D)">
            <summary>
            Transform the vectors in the given array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <remarks>
            This method changes the vector values in the <paramref name="vectors"/> array.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationD.TransformArray(Sharp3D.Math.Core.Vector3DArrayList,Sharp3D.Math.Core.Matrix4D,Sharp3D.Math.Core.Vector3DArrayList)">
            <summary>
            Transform the vectors in the given array and put the result in another array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <param name="result">An array of vectors to put the transformation results in (should be empty).</param>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.TransformationF">
            <summary>
            Contains utility functions to create single-precision transformations.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.AffineTransformation(System.Single,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.QuaternionF,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Builds a 3-D affine transformation matrix.
            </summary>
            <param name="scaling">The scaling vactor. Use zero to specify no scaling.</param>
            <param name="rotationCenter">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance specifying the center of the rotation.</param>
            <param name="rotation">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance specifying the rotation. use <see cref="F:Sharp3D.Math.Core.QuaternionF.Identity"/> to specify no rotation.</param>
            <param name="translation">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> specifying the translation. Use <see cref="F:Sharp3D.Math.Core.Vector3F.Zero"/> to specify no translation.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the affine transformation.</returns>
            <remarks>
            <p>
            Calculates the transoformation matrix using the following formula:
            Mout = Ms * (Mrc)^-1 * Mr * Mrc * Mt
            </p>
            <p>
            where:
            <list type="bullet">
            	<item>
            		<term>Ms</term>
            		<description>Scaling transformation.</description>
            	</item>
            	<item>
            		<term>Mrc</term>
            		<description>Rotation center transformation.</description>
            	</item>
            	<item>
            		<term>Mr</term>
            		<description>Rotation transformation.</description>
            	</item>
            	<item>
            		<term>Mt</term>
            		<description>Translation transformation.</description>
            	</item>
            </list>
            </p>
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotationAxis(Sharp3D.Math.Core.Vector3F,System.Single)">
            <summary>
            Builds a matrix that rotates around an arbitrary axis.
            </summary>
            <param name="rotationAxis">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance specifying the axis to rotate around (vector has to be of unit length).</param>
            <param name="angle">
            Angle of rotation, in radians. Angles are measured clockwise when looking along the rotation axis from the origin.
            </param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotationQuaternion(Sharp3D.Math.Core.QuaternionF)">
            <summary>
            Builds a rotation matrix from a quaternion.
            </summary>
            <param name="q">A <see cref="T:Sharp3D.Math.Core.QuaternionF"/> instance.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Builds a matrix with a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
            <remarks>
            The order of transformations is first roll, then pitch, then yaw. 
            Relative to the object's local coordinate axis, this is equivalent to 
            rotation around the z-axis, followed by rotation around the x-axis, 
            followed by rotation around the y-axis. 
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotateX(System.Single)">
            <summary>
            Builds a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotateY(System.Single)">
            <summary>
            Builds a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.RotateZ(System.Single)">
            <summary>
            Builds a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">Angle of rotation, in radians.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the rotation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Scaling(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Builds a matrix that scales along the x-axis, y-axis, and z-axis.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> structure containing three values that represent the scaling factors applied along the x-axis, y-axis, and z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the scaling transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Scaling(System.Single,System.Single,System.Single)">
            <summary>
            Builds a matrix that scales along the x-axis, y-axis, and z-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the scaling transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Translation(System.Single,System.Single,System.Single)">
            <summary>
            Builds a translation matrix.
            </summary>
            <param name="x">Offset on the x-axis.</param>
            <param name="y">Offset on the y-axis.</param>
            <param name="z">Offset on the z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the translation transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Translation(Sharp3D.Math.Core.Vector3F)">
            <summary>
            Builds a translation matrix.
            </summary>
            <param name="v">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> structure containing three values that represent the offsets on the x-axis, y-axis, and z-axis.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the translation transformation.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Reflect(Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Builds a matrix that reflects the coordinate system about a plane.
            </summary>
            <param name="p">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the reflection transformation.</returns>
            <remarks>
            This method normalizes the plane's equation before creating the reflection matrix.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.Shadow(Sharp3D.Math.Core.Vector4F,Sharp3D.Math.Geometry3D.Plane)">
            <summary>
            Builds a matrix that flattens geometry into a plane.
            </summary>
            <param name="lightPosition">A <see cref="T:Sharp3D.Math.Core.Vector4F"/> instance representing the light source position.</param>
            <param name="p">A <see cref="T:Sharp3D.Math.Geometry3D.Plane"/> instance.</param>
            <returns>A <see cref="T:Sharp3D.Math.Core.Matrix4F"/> representing the shadow transformation.</returns>
            <remarks>
            This method flattens geometry into a plane, as if it were casting a shadow from a light.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.TransformArray(Sharp3D.Math.Core.Vector4FArrayList,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Transform the vectors in the given array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <remarks>
            This method changes the vector values in the <paramref name="vectors"/> array.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.TransformArray(Sharp3D.Math.Core.Vector4FArrayList,Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector4FArrayList)">
            <summary>
            Transform the vectors in the given array and put the result in another array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <param name="result">An array of vectors to put the transformation results in (should be empty).</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.TransformArray(Sharp3D.Math.Core.Vector3FArrayList,Sharp3D.Math.Core.Matrix4F)">
            <summary>
            Transform the vectors in the given array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <remarks>
            This method changes the vector values in the <paramref name="vectors"/> array.
            </remarks>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TransformationF.TransformArray(Sharp3D.Math.Core.Vector3FArrayList,Sharp3D.Math.Core.Matrix4F,Sharp3D.Math.Core.Vector3FArrayList)">
            <summary>
            Transform the vectors in the given array and put the result in another array.
            </summary>
            <param name="vectors">An array of vectors to transform.</param>
            <param name="transformation">The transformation.</param>
            <param name="result">An array of vectors to put the transformation results in (should be empty).</param>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.Triangle">
            <summary>
            Represents a triangle in 3D space.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.#ctor(Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F,Sharp3D.Math.Core.Vector3F)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> class.
            </summary>
            <param name="p0">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="p1">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
            <param name="p2">A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.#ctor(Sharp3D.Math.Geometry3D.Triangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> class using a given Triangle.
            </summary>
            <param name="t">A <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> instance.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.System#ICloneable#Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> object this method creates, cast as an object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> object.
            </summary>
            <returns>The <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> object this method creates.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.Parse(System.String)">
            <summary>
            Converts the specified string to its <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> equivalent.
            </summary>
            <param name="s">A string representation of a <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/></param>
            <returns>A <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> that represents the vector specified by the <paramref name="s"/> parameter.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.GetHashCode">
            <summary>
            Get the hashcode for this vector instance.
            </summary>
            <returns>Returns the hash code for this vector instance.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to
            the specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns><see langword="true"/> if <paramref name="obj"/> is a <see cref="T:Sharp3D.Math.Core.Vector3F"/> and has the same values as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.op_Equality(Sharp3D.Math.Geometry3D.Triangle,Sharp3D.Math.Geometry3D.Triangle)">
            <summary>
            Tests whether two specified triangles are equal.
            </summary>
            <param name="a">The left-hand triangle.</param>
            <param name="b">The right-hand triangle.</param>
            <returns><see langword="true"/> if the two triangles are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.op_Inequality(Sharp3D.Math.Geometry3D.Triangle,Sharp3D.Math.Geometry3D.Triangle)">
            <summary>
            Tests whether two specified triangles are not equal.
            </summary>
            <param name="a">The left-hand triangle.</param>
            <param name="b">The right-hand triangle.</param>
            <returns><see langword="true"/> if the two triangles are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.Triangle.FromBarycentric(System.Single,System.Single)">
            <summary>
            Calculates a point in the triangle  from its barycentric coordinates.
            </summary>
            <param name="u">A single-precision floating point coordinate value.</param>
            <param name="v">A single-precision floating point coordinate value.</param>
            <returns>Returns a point inside the trianlge.</returns>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Triangle.Point0">
            <summary>
            The first triangle vertex.
            </summary>
            <value>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</value>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Triangle.Point1">
            <summary>
            The second triangle vertex.
            </summary>
            <value>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</value>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Triangle.Point2">
            <summary>
            The third triangle vertex.
            </summary>
            <value>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</value>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Triangle.Normal">
            <summary>
            Computes the normal for this triangle.
            </summary>
            <value>A <see cref="T:Sharp3D.Math.Core.Vector3F"/> instance.</value>
        </member>
        <member name="P:Sharp3D.Math.Geometry3D.Triangle.Item(System.Int32)">
            <summary>
            Indexer ( [P0, P1, P2] ).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Geometry3D.TriangleConverter">
            <summary>
            Converts a <see cref="T:Sharp3D.Math.Geometry3D.Triangle"/> to and from string representation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TriangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TriangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TriangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The Type to convert the <paramref name="value"/> parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Sharp3D.Math.Geometry3D.TriangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:Sharp3D.Math.Core.ParseException">Failed parsing from string.</exception>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(System.Int32[])">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(System.Single[])">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(System.Double[])">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="M:Sharp3D.Math.Random.IRandomArrayFiller.Fill(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Fills the given array with random numbers.
            </summary>
            <param name="array">An array to fill.</param>
            <remarks>The given array must be initialized before this method is called.</remarks>
        </member>
        <member name="T:Sharp3D.Math.Random.PerlinNoise">
            <summary>
            Perlin noise generation class.
            Contains functions for 1D, 2D and 3D perlin noise generation.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.#ctor">
            <summary>
            InitialintegerZes a new instance of the <see cref="T:Sharp3D.Math.Random.PerlinNoise"/> class.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.Noise(System.Int32)">
            <summary>
            Generates a pseudo-random number based upon one value(dimension).
            </summary>
            <param name="x">An integer value.</param>
            <returns>A single-precision floating point value between -1 and 1.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.Noise(System.Int32,System.Int32)">
            <summary>
            Generates a pseudo-random number based upon two value(dimensions).
            </summary>
            <param name="x">An integer value.</param>
            <param name="y">An integer value.</param>
            <returns>A single-precision floating point value between -1 and 1.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.Noise(System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates a pseudo-random number based upon three value(dimensions).
            </summary>
            <param name="x">An integer value.</param>
            <param name="y">An integer value.</param>
            <param name="z">An integer value.</param>
            <returns>A single-precision floating point value between -1 and 1.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.GenerateLookup(System.Int32)">
            <summary>
            Generates the 1d noise and stores it in the lookup table (for faster processing).
            </summary>
            <param name="maxX">Maximum x value (generates noise from 0 to maxX).</param>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.GenerateLookup(System.Int32,System.Int32)">
            <summary>
            Generates the 2d noise and stores it in the lookup table (for faster processing).
            </summary>
            <param name="maxX">Maximum x value (generates noise from 0 to maxX).</param>
            <param name="maxY">Maximum y value (generates noise from 0 to maxY).</param>
        </member>
        <member name="M:Sharp3D.Math.Random.PerlinNoise.GenerateLookup(System.Int32,System.Int32,System.Int32)">
            <summary>
            Generates the 3d noise and stores it in the lookup table (for faster processing).
            </summary>
            <param name="maxX">Maximum x value (generates noise from 0 to maxX).</param>
            <param name="maxY">Maximum y value (generates noise from 0 to maxY).</param>
            <param name="maxZ">Maximum z value (generates noise from 0 to maxZ).</param>
        </member>
        <member name="T:Sharp3D.Math.Random.RandGenMT">
            <summary>
            Generates random numbers from a uniform distribution using the Mersenne Twister algorithm.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Random.RandGenMT"/> class using the time of day in milliseconds as the seed.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Random.RandGenMT"/> class using a given seed.
            </summary>
            <param name="seed">The seed.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sharp3D.Math.Random.RandGenMT"/> class using a given array.
            </summary>
            <param name="init">The array for initializing keys.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Next">
            <summary>
            Returns a random integer greater than or equal to zero and
            less than or equal to <c>MaxRandomInt</c>. 
            </summary>
            <returns>The next random integer.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Next(System.Int32)">
            <summary>
            Returns a positive random integer less than the specified maximum.
            </summary>
            <param name="maxValue">The maximum value. Must be greater than zero.</param>
            <returns>A positive random integer less than or equal to <c>maxValue</c>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random integer within the specified range.
            </summary>
            <param name="minValue">The lower bound.</param>
            <param name="maxValue">The upper bound.</param>
            <returns>A random integer greater than or equal to <c>minValue</c>, and less than
            or equal to <c>maxValue</c>.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextUInt">
            <summary>
            Returns a random unsigned integer greater than or equal to zero and
            less than or equal to <c>MaxRandomInt</c>. 
            </summary>
            <returns>The next random unsigned integer.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextFloat">
            <summary>
            Returns a random number between, 0.0 and 1.0.
            </summary>
            <returns>A single-precision floating point number greater than or equal to, 0.0, 
            and less than 1.0.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextFloat(System.Boolean)">
            <summary>
            Returns a random number greater than or equal to zero, and either strictly
            less than one, or less than or equal to one, depending on the value of the
            given boolean parameter.
            </summary>
            <param name="includeOne">
            If <c>true</c>, the random number returned will be 
            less than or equal to one; otherwise, the random number returned will
            be strictly less than one.
            </param>
            <returns>
            If <c>includeOne</c> is <c>true</c>, this method returns a
            single-precision random number greater than or equal to zero, and less
            than or equal to one. If <c>includeOne</c> is <c>false</c>, this method
            returns a single-precision random number greater than or equal to zero and
            strictly less than one.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextFloatPositive">
            <summary>
            Returns a random number greater than, 0.0 and less than 1.0.
            </summary>
            <returns>A random number greater than, 0.0 and less than 1.0.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextDouble">
            <summary>
            Returns a random number between, 0.0 and 1.0.
            </summary>
            <returns>A double-precision floating point number greater than or equal to, 0.0, 
            and less than 1.0.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextDouble(System.Boolean)">
            <summary>
            Returns a random number greater than or equal to zero, and either strictly
            less than one, or less than or equal to one, depending on the value of the
            given boolean parameter.
            </summary>
            <param name="includeOne">
            If <c>true</c>, the random number returned will be 
            less than or equal to one; otherwise, the random number returned will
            be strictly less than one.
            </param>
            <returns>
            If <c>includeOne</c> is <c>true</c>, this method returns a
            single-precision random number greater than or equal to zero, and less
            than or equal to one. If <c>includeOne</c> is <c>false</c>, this method
            returns a single-precision random number greater than or equal to zero and
            strictly less than one.
            </returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.NextDoublePositive">
            <summary>
            Returns a random number greater than, 0.0 and less than 1.0.
            </summary>
            <returns>A random number greater than, 0.0 and less than 1.0.</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Next53BitRes">
            <summary>
            Generates a random number on <c>[0,1)</c> with 53-bit resolution.
            </summary>
            <returns>A random number on <c>[0,1)</c> with 53-bit resolution</returns>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Initialize">
            <summary>
            Reinitializes the random number generator using the time of day in
            milliseconds as the seed.
            </summary>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Initialize(System.Int32)">
            <summary>
            Reinitializes the random number generator with the given seed.
            </summary>
            <param name="seed">The seed.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Initialize(System.Int32[])">
            <summary>
            Reinitializes the random number generator with the given array.
            </summary>
            <param name="init">The array for initializing keys.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(System.Int32[])">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of integers.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(Sharp3D.Math.Core.IntArrayList)">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of integers.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(System.Double[])">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(Sharp3D.Math.Core.DoubleArrayList)">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of double-precision floating point numbers.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(System.Single[])">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
        </member>
        <member name="M:Sharp3D.Math.Random.RandGenMT.Fill(Sharp3D.Math.Core.FloatArrayList)">
            <summary>
            Fills the specified array of doubles with random numbers in the interval [0,1).
            </summary>
            <param name="array">An array of single-precision floating point numbers.</param>
        </member>
        <member name="P:Sharp3D.Math.Random.RandGenMT.MaxRandomInt">
            <summary>
            Gets the maximum random integer value. All random integers generated
            by instances of this class are less than or equal to this value. This
            value is <c>0x7fffffff</c> (<c>2,147,483,647</c>).
            </summary>
        </member>
        <member name="T:Sharp3D.Math.Random.RandomUtils">
            <summary>
            Contains various utility and helper methods.
            </summary>
        </member>
    </members>
</doc>
